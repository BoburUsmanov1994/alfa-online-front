{"version":3,"file":"static/js/421.7f4d8df1.chunk.js","mappings":"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","sources":["modules/agreement/containers/osgop/CreateContainer.jsx","modules/agreement/pages/osgop/CreatePage.jsx"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport {useStore} from \"../../../../store\";\r\nimport {find, get, every, isEqual, isNil, round, upperCase, values, isEmpty, sumBy, includes} from \"lodash\";\r\nimport Panel from \"../../../../components/panel\";\r\nimport Search from \"../../../../components/search\";\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Section from \"../../../../components/section\";\r\nimport Title from \"../../../../components/ui/title\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Flex from \"../../../../components/flex\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport {useGetAllQuery, usePostQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport {OverlayLoader} from \"../../../../components/loader\";\r\nimport dayjs from \"dayjs\";\r\nimport {toast} from \"react-toastify\";\r\nimport Checkbox from 'rc-checkbox';\r\nimport Modal from \"../../../../components/modal\";\r\nimport Table from \"../../../../components/table\";\r\nimport {Trash2} from \"react-feather\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst getEndDateByInsuranceTerm = (term, startDate) => {\r\n    if (!isNil(term)) {\r\n        if (get(term, 'prefix') == 'day') {\r\n            return dayjs(startDate).add(get(term, 'value') - 1, get(term, 'prefix')).toDate()\r\n        }\r\n        if (get(term, 'prefix') == 'month') {\r\n            return dayjs(startDate).add(get(term, 'value'), get(term, 'prefix')).subtract(1, 'day').toDate()\r\n        }\r\n        if (get(term, 'prefix') == 'year') {\r\n            return dayjs(startDate).add(get(term, 'value'), get(term, 'prefix')).subtract(1, 'day').toDate()\r\n        }\r\n    }\r\n    return dayjs()\r\n}\r\n\r\nconst CreateContainer = () => {\r\n    const [owner, setOwner] = useState('person')\r\n    const [ownerPerson, setOwnerPerson] = useState(null)\r\n    const [ownerOrganization, setOwnerOrganization] = useState(null)\r\n    const [insurant, setInsurant] = useState('person')\r\n    const [insurantPerson, setInsurantPerson] = useState(null)\r\n    const [insurantOrganization, setInsurantOrganization] = useState(null)\r\n    const [vehicle, setVehicle] = useState(null)\r\n    const [passportSeries, setPassportSeries] = useState(null)\r\n    const [passportNumber, setPassportNumber] = useState(null)\r\n    const [birthDate, setBirthDate] = useState(null)\r\n    const [insurantPassportSeries, setInsurantPassportSeries] = useState(null)\r\n    const [insurantPassportNumber, setInsurantPassportNumber] = useState(null)\r\n    const [insurantBirthDate, setInsurantBirthDate] = useState(null)\r\n    const [inn, setInn] = useState(null)\r\n    const [insurantInn, setInsurantInn] = useState(null)\r\n    const [insuranceTerm, setInsuranceTerm] = useState(null)\r\n    const [policeStartDate, setPoliceStartDate] = useState(dayjs())\r\n    const [rpmPercent, setRpmPercent] = useState(0)\r\n    const [rewardPercent, setRewardPercent] = useState(0)\r\n    const [govNumber, setGovNumber] = useState(null)\r\n    const [techPassportSeria, setTechPassportSeria] = useState(null)\r\n    const [techPassportNumber, setTechPassportNumber] = useState(null)\r\n    const [insurantIsOwner, setInsuranttIsOwner] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [lastYearPayment, setlastYearPayment] = useState(null)\r\n    const [lastYearInsurancePremium, setLastYearInsurancePremium] = useState(null)\r\n    const [ratioResponse, setRatioResponse] = useState({})\r\n    const [agencyId, setAgencyId] = useState(null)\r\n    const [agentId, setAgentId] = useState(null)\r\n    const [regionId, setRegionId] = useState(null)\r\n    const [otherPrams, setOtherParams] = useState({})\r\n    const [idList, setIdList] = useState([])\r\n    const [osgopCalculateData, setOsgopCalculateData] = useState({\r\n        insuranceSumForPassenger: 44000000,\r\n        passengerCapacity: 0,\r\n        vehicleTypeId: 0,\r\n        lossRatio: 0\r\n    })\r\n    const [osgopCalculateResponse, setOsgopCalculateResponse] = useState({})\r\n    const [policies, setPolicies] = useState([])\r\n\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation()\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [{\r\n        id: 1, title: 'OSGOP', path: '/osgop',\r\n    }, {\r\n        id: 2, title: 'Добавить OSGOP', path: '/osgop/create',\r\n    }], [])\r\n    const user = useStore((state) => get(state, 'user'))\r\n\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const {data: filials} = useGetAllQuery({key: KEYS.agencies, url: URLS.agencies})\r\n    const filialList = getSelectOptionsListFromData(get(filials, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: insuranceTerms, isLoading: isLoadingInsuranceTerms} = useGetAllQuery({\r\n        key: KEYS.insuranceTerms, url: URLS.insuranceTerms\r\n    })\r\n    const insuranceTermsList = getSelectOptionsListFromData(get(insuranceTerms, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: region, isLoading: isLoadingRegion} = useGetAllQuery({\r\n        key: KEYS.regions, url: URLS.regions\r\n    })\r\n    const regionList = getSelectOptionsListFromData(get(region, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: genders} = useGetAllQuery({\r\n        key: KEYS.genders, url: URLS.genders\r\n    })\r\n    const genderList = getSelectOptionsListFromData(get(genders, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: residentTypes} = useGetAllQuery({\r\n        key: KEYS.residentTypes, url: URLS.residentTypes\r\n    })\r\n    const residentTypeList = getSelectOptionsListFromData(get(residentTypes, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: vehicleTypes} = useGetAllQuery({\r\n        key: KEYS.vehicleTypes, url: URLS.vehicleTypes\r\n    })\r\n    const vehicleTypeList = getSelectOptionsListFromData(get(vehicleTypes, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: ownershipForms} = useGetAllQuery({\r\n        key: KEYS.ownershipForms, url: URLS.ownershipForms\r\n    })\r\n    const ownershipFormList = getSelectOptionsListFromData(get(ownershipForms, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: agents} = useGetAllQuery({\r\n        key: [KEYS.agents, agencyId],\r\n        url: URLS.agents,\r\n        params: {\r\n            params: {\r\n                branch: agencyId\r\n            }\r\n        },\r\n        enabled: !!(agencyId)\r\n    })\r\n    const agentsList = getSelectOptionsListFromData(get(agents, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: country, isLoading: isLoadingCountry} = useGetAllQuery({\r\n        key: KEYS.countries, url: URLS.countries\r\n    })\r\n    const countryList = getSelectOptionsListFromData(get(country, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: okeds} = useGetAllQuery({\r\n        key: KEYS.okeds, url: URLS.okeds\r\n    })\r\n    const okedList = getSelectOptionsListFromData(get(okeds, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: areaTypes} = useGetAllQuery({\r\n        key: KEYS.areaTypes, url: URLS.areaTypes\r\n    })\r\n    const areaTypesList = getSelectOptionsListFromData(get(areaTypes, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: district} = useGetAllQuery({\r\n        key: [KEYS.districts, regionId],\r\n        url: URLS.districts,\r\n        params: {\r\n            params: {\r\n                region: regionId\r\n            }\r\n        },\r\n        enabled: !!(regionId || get(ownerPerson, 'regionId'))\r\n    })\r\n    const districtList = getSelectOptionsListFromData(get(district, `data.result`, []), 'id', 'name')\r\n    const {\r\n        mutate: getPersonalInfoRequest, isLoading: isLoadingPersonalInfo\r\n    } = usePostQuery({listKeyId: KEYS.personalInfoProvider})\r\n\r\n    const {\r\n        mutate: getOrganizationInfoRequest, isLoading: isLoadingOrganizationInfo\r\n    } = usePostQuery({listKeyId: KEYS.organizationInfoProvider})\r\n\r\n    const {\r\n        mutate: getVehicleInfoRequest, isLoading: isLoadingVehicleInfo\r\n    } = usePostQuery({listKeyId: KEYS.vehicleInfoProvider})\r\n\r\n    const {\r\n        mutate: getRatioRequest\r\n    } = usePostQuery({listKeyId: KEYS.getRatio, hideSuccessToast: true})\r\n    const {\r\n        mutate: calcRequest\r\n    } = usePostQuery({listKeyId: KEYS.osgopCalculate, hideSuccessToast: true})\r\n\r\n    const {\r\n        mutate: createRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.osgopCreate})\r\n\r\n    const getInfo = (type = 'owner') => {\r\n        getPersonalInfoRequest({\r\n                url: URLS.personalInfoProvider, attributes: type == 'insurant' ? {\r\n                    birthDate: dayjs(insurantBirthDate).format('YYYY-MM-DD'),\r\n                    passportSeries: insurantPassportSeries,\r\n                    passportNumber: insurantPassportNumber\r\n                } : {\r\n                    birthDate: dayjs(birthDate).format('YYYY-MM-DD'), passportSeries, passportNumber\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    if (type == 'owner') {\r\n                        setOwnerPerson(get(data, 'result'));\r\n                    }\r\n                    if (type == 'insurant') {\r\n                        setInsurantPerson(get(data, 'result'));\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOrgInfo = (type = 'owner') => {\r\n        getOrganizationInfoRequest({\r\n                url: URLS.organizationInfoProvider, attributes: type == 'insurant' ? {\r\n                    inn: insurantInn\r\n                } : {\r\n                    inn: inn\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    if (type == 'owner') {\r\n                        setOwnerOrganization(get(data, 'result'))\r\n                    }\r\n                    if (type == 'insurant') {\r\n                        setInsurantOrganization(get(data, 'result'))\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getVehicleInfo = () => {\r\n        if (govNumber && techPassportNumber && techPassportSeria) {\r\n            getVehicleInfoRequest({\r\n                    url: URLS.vehicleInfoProvider, attributes: {\r\n                        govNumber,\r\n                        techPassportNumber,\r\n                        techPassportSeria\r\n                    }\r\n                },\r\n                {\r\n                    onSuccess: ({data}) => {\r\n                        setVehicle(get(data, 'result'))\r\n                    }\r\n                }\r\n            )\r\n        } else {\r\n            toast.warn('Please fill all fields')\r\n        }\r\n    }\r\n\r\n    const calculatePremium = () => {\r\n        calcRequest({\r\n                url: URLS.osgopCalculate, attributes: {...osgopCalculateData,insuranceTermId:insuranceTerm}\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    setOsgopCalculateResponse(get(data, 'result'))\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getRatio = () => {\r\n        getRatioRequest({\r\n                url: URLS.getRatio, attributes: {\r\n                    lastYearPayment,\r\n                    lastYearInsurancePremium\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    setRatioResponse(get(data, 'result'))\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getFieldData = (name, value) => {\r\n        if (isEqual(name, 'terms')) {\r\n            setInsuranceTerm(value)\r\n        }\r\n        if (isEqual(name, 'insurant.person.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'insurant.organization.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'owner.organization.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'owner.person.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'rpm')) {\r\n            setRpmPercent(value)\r\n        }\r\n        if (isEqual(name, 'agentReward')) {\r\n            setRewardPercent(value)\r\n        }\r\n        if (isEqual(name, 'agencyId')) {\r\n            setAgencyId(value)\r\n        }\r\n        if (isEqual(name, 'agentId')) {\r\n            setAgentId(value)\r\n        }\r\n        if (isEqual(name, 'insuranceTermId')) {\r\n            setInsuranceTerm(value)\r\n        }\r\n        if (isEqual(name, 'lastYearPayment')) {\r\n            setlastYearPayment(value)\r\n        }\r\n        if (isEqual(name, 'lastYearInsurancePremium')) {\r\n            setLastYearInsurancePremium(value)\r\n        }\r\n        if (isEqual(name, 'vehicle.objects[0].vehicle.passengerCapacity')) {\r\n            setOsgopCalculateData(prev => ({...prev, passengerCapacity: parseInt(value)}))\r\n        }\r\n        if (isEqual(name, 'vehicle.objects[0].vehicle.vehicleTypeId')) {\r\n            setOsgopCalculateData(prev => ({...prev, vehicleTypeId: parseInt(value)}))\r\n        }\r\n        if (isEqual(name, 'lossRatio')) {\r\n            setOsgopCalculateData(prev => ({...prev, lossRatio: parseInt(value)}))\r\n        }\r\n        setOtherParams(prev => ({...prev, [name]: value}))\r\n    }\r\n\r\n    const create = ({data}) => {\r\n        const {\r\n            insuranceSumForPassenger,\r\n            passengerCapacity,\r\n            birthDate,\r\n            passportNumber,\r\n            passportSeries,\r\n            insurantPassportSeries,\r\n            insurantPassportNumber,\r\n            insurantBirthDate,\r\n            rpmSum,\r\n            inn,\r\n            agentReward,\r\n            insurantInn,\r\n            insurant: insurantType,\r\n            owner: ownerType,\r\n            ...rest\r\n        } = data\r\n        createRequest({\r\n                url: URLS.osgopCreate, attributes: {\r\n                    agentReward:Number(agentReward),\r\n                    regionId: isEqual(owner , 'person') ? get(insurantType, 'person.regionId') : get(insurantType, 'organization.regionId'),\r\n                    insurantIsOwner,\r\n                    owner: isEqual(insurantIsOwner ? owner : insurant, 'person') ? {person: get(ownerType, 'person', {})} : {\r\n                        organization: {\r\n                            ...get(ownerType, 'organization', {})\r\n                        }\r\n                    },\r\n                    insurant: isEqual(owner, 'person') ? {person: get(insurantType, 'person', {})} : {\r\n                        organization: {\r\n                            ...get(insurantType, 'organization', {})\r\n                        }\r\n                    },\r\n                    policies: policies.filter((_policy,index)=>includes(idList,index)),\r\n                    ...rest\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data: response}) => {\r\n                    if (get(response, 'result.osgop_formId')) {\r\n                        navigate(`/osgop/view/${get(response, 'result.osgop_formId')}`);\r\n                    } else {\r\n                        navigate(`/osgop`);\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isNil(lastYearPayment) && !isNil(lastYearInsurancePremium)) {\r\n            getRatio()\r\n        }\r\n    }, [lastYearPayment, lastYearInsurancePremium])\r\n\r\n    useEffect(() => {\r\n        if (every(values(osgopCalculateData), (_item) => _item > 0 && !isNil(_item)) && insuranceTerm) {\r\n            calculatePremium()\r\n        }\r\n    }, [osgopCalculateData,insuranceTerm])\r\n\r\n\r\n    if (isLoadingRegion || isLoadingInsuranceTerms) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    return (<>\r\n        {(isLoadingCountry || isLoadingPersonalInfo || isLoadingOrganizationInfo || isLoadingVehicleInfo || isLoadingPost) &&\r\n            <OverlayLoader/>}\r\n        <Panel>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Search/>\r\n                </Col>\r\n            </Row>\r\n        </Panel>\r\n        <Section>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Title>Параметры полиса</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Form formRequest={create} getValueFromField={(value, name) => getFieldData(name, value)}\r\n                          footer={<Flex className={'mt-32'}><Button className={'mr-16'}>Сохранить</Button></Flex>}>\r\n                        <Row gutterWidth={60} className={'mt-32'}>\r\n                            <Col xs={4} style={{borderRight: '1px solid #DFDFDF'}}>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Статус</Col>\r\n                                    <Col xs={7}><Button green>Новый</Button></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Филиал</Col>\r\n                                    <Col xs={7}><Field disabled defaultValue={get(user, 'branch_Id.fond_id')}\r\n                                                       label={'Filial'} params={{required: true}} options={filialList}\r\n                                                       property={{hideLabel: true}} type={'select'}\r\n                                                       name={'agencyId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Серия договора:</Col>\r\n                                    <Col xs={7}><Field property={{hideLabel: true}} type={'input'}\r\n                                                       name={'seria'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Номер договора: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}} property={{hideLabel: true}}\r\n                                                       type={'input'}\r\n                                                       name={'number'}/></Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая сумма: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}}\r\n                                                       defaultValue={sumBy(policies, 'insuranceSum')}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'number-format-input'}\r\n                                                       name={'sum'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая премия: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}}\r\n                                                       defaultValue={sumBy(policies, 'insurancePremium')}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'number-format-input'}\r\n                                                       name={'premium'}/></Col>\r\n                                </Row>\r\n\r\n\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Срок страхования:</Col>\r\n                                    <Col xs={7}><Field options={insuranceTermsList} params={{required: true}}\r\n                                                       label={'Insurance term'} property={{hideLabel: true}}\r\n                                                       type={'select'}\r\n                                                       name={'insuranceTermId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дата начала покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        params={{required: true}}\r\n                                        property={{\r\n                                            hideLabel: true,\r\n                                            onChange: (val) => setPoliceStartDate(val),\r\n                                            dateFormat: 'dd.MM.yyyy'\r\n                                        }}\r\n                                        type={'datepicker'}\r\n                                        name={'contractStartDate'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дача окончания покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={getEndDateByInsuranceTerm(find(get(insuranceTerms, `data.result`, []), (_insuranceTerm) => get(_insuranceTerm, 'id') == insuranceTerm), policeStartDate)}\r\n                                        disabled={!isEqual(insuranceTerm, 6)}\r\n                                        property={{hideLabel: true, dateFormat: 'dd.MM.yyyy'}} type={'datepicker'}\r\n                                        name={'contractEndDate'}/></Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Собственник </Title></Col>\r\n                            <Col xs={12}>\r\n                                <Row>\r\n                                    <Col xs={4}>\r\n                                        <Flex>\r\n                                            <h4 className={'mr-16'}>Собственник </h4>\r\n                                            <Button onClick={() => setOwner('person')}\r\n                                                    gray={!isEqual(owner, 'person')} className={'mr-16'}\r\n                                                    type={'button'}>Физ. лицо</Button>\r\n                                            <Button onClick={() => setOwner('organization')}\r\n                                                    gray={!isEqual(owner, 'organization')} type={'button'}>Юр.\r\n                                                лицо</Button>\r\n                                        </Flex>\r\n                                    </Col>\r\n                                    <Col xs={8} className={'text-right'}>\r\n                                        {isEqual(owner, 'person') && <Flex justify={'flex-end'}>\r\n                                            <Field\r\n                                                className={'mr-16'} style={{width: 75}}\r\n                                                property={{\r\n                                                    hideLabel: true, mask: 'aa', placeholder: 'AA', maskChar: '_',\r\n                                                    onChange: (val) => setPassportSeries(upperCase(val))\r\n                                                }}\r\n                                                name={'passportSeries'}\r\n                                                type={'input-mask'}\r\n                                            />\r\n                                            <Field property={{\r\n                                                hideLabel: true,\r\n                                                mask: '9999999',\r\n                                                placeholder: '1234567',\r\n                                                maskChar: '_',\r\n                                                onChange: (val) => setPassportNumber(val)\r\n                                            }} name={'passportNumber'} type={'input-mask'}/>\r\n\r\n                                            <Field className={'ml-15'}\r\n                                                   property={{\r\n                                                       hideLabel: true,\r\n                                                       placeholder: 'Дата рождения',\r\n                                                       onChange: (e) => setBirthDate(e)\r\n                                                   }}\r\n                                                   name={'birthDate'} type={'datepicker'}/>\r\n                                            <Button onClick={() => getInfo('owner')} className={'ml-15'}\r\n                                                    type={'button'}>Получить\r\n                                                данные</Button>\r\n                                        </Flex>}\r\n                                        {isEqual(owner, 'organization') && <Flex justify={'flex-end'}>\r\n                                            <Field onChange={(e) => setInn(e.target.value)} property={{\r\n                                                hideLabel: true,\r\n                                                mask: '999999999',\r\n                                                placeholder: 'Inn',\r\n                                                maskChar: '_'\r\n                                            }} name={'inn'} type={'input-mask'}/>\r\n\r\n                                            <Button onClick={() => getOrgInfo('owner')} className={'ml-15'}\r\n                                                    type={'button'}>Получить\r\n                                                данные</Button>\r\n                                        </Flex>}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <hr className={'mt-15 mb-15'}/>\r\n                            </Col>\r\n                            {isEqual(owner, 'person') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'lastNameLatin')}\r\n                                           label={'Lastname'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.lastname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'firstNameLatin')}\r\n                                           label={'Firstname'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.firstname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'middleNameLatin')}\r\n                                           label={'Middlename'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.middlename'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'startDate')}\r\n                                           label={'Дата выдачи паспорта'}\r\n                                           type={'datepicker'}\r\n                                           name={'insurant.person.passportData.startDate'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'issuedBy')}\r\n                                           label={'Кем выдан'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.passportData.issuedBy'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerPerson, 'gender')}\r\n                                        options={genderList}\r\n                                        label={'Gender'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.gender'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerPerson, 'pinfl')}\r\n                                           label={'ПИНФЛ'} type={'input'}\r\n                                           name={'insurant.person.passportData.pinfl'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        defaultValue={get(ownerPerson, 'phone')}\r\n                                        label={'Phone'}\r\n                                        type={'input'}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        name={'insurant.person.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(ownerPerson, 'email')}\r\n                                        label={'Email'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={residentTypeList}\r\n                                        defaultValue={get(ownerPerson, 'residentType')}\r\n                                        label={'Resident type'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.residentType'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        label={'Серия вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.driverLicenseSeria'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        label={'Номер вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.driverLicenseNumber'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(ownerPerson, 'birthCountry')}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'insurant.person.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={regionList}\r\n                                        defaultValue={get(ownerPerson, 'regionId')}\r\n                                        label={'Region'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.regionId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(ownerPerson, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.districtId'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={get(ownerPerson, 'areaTypeId')}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerPerson, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={passportSeries}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.passportData.seria'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={passportNumber}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.passportData.number'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={dayjs(birthDate).format(\"YYYY-MM-DD\")}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.birthDate'}/>\r\n                                </Col>\r\n                            </>}\r\n                            {isEqual(owner, 'organization') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerOrganization, 'name')}\r\n                                           label={'Наименование'} type={'input'}\r\n                                           name={'insurant.organization.name'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Руководитель'} type={'input'}\r\n                                           name={'insurant.organization.representativeName'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Должность'} type={'input'}\r\n                                           name={'insurant.organization.position'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerOrganization, 'email')} label={'Email'} type={'input'}\r\n                                           name={'insurant.organization.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerOrganization, 'phone')} params={{\r\n                                        required: true,\r\n                                        pattern: {\r\n                                            value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                            message: 'Invalid format'\r\n                                        }\r\n                                    }}\r\n                                           property={{placeholder: '998XXXXXXXXX'}}\r\n                                           label={'Телефон'} type={'input'}\r\n                                           name={'insurant.organization.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={parseInt(get(ownerOrganization, 'oked'))}\r\n                                                   label={'Oked'} params={{required: true, valueAsString: true}}\r\n                                                   options={okedList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.oked'}/></Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Расчетный счет'} type={'input'}\r\n                                           name={'insurant.organization.checkingAccount'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field label={'Форма собственности'}\r\n                                                   options={ownershipFormList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.ownershipFormId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerOrganization, 'birthCountry', 210)}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'insurant.organization.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field label={'Область'} params={{required: true}} options={regionList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.regionId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(ownerOrganization, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'insurant.organization.districtId'}/>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={get(ownerOrganization, 'areaTypeId')}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerOrganization, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'insurant.organization.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={inn}\r\n                                        type={'input'}\r\n                                        name={'insurant.organization.inn'}/>\r\n                                </Col>\r\n\r\n\r\n                            </>}\r\n                            <Col xs={12} className={'mt-15'}><Checkbox checked={insurantIsOwner}\r\n                                                                       onChange={(e) => setInsuranttIsOwner(e.target.checked)}\r\n                                                                       className={'mr-5'}/><strong>Собственник является\r\n                                Страхователем</strong></Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Страхователь </Title></Col>\r\n                            <Col xs={12}>\r\n                                <Row>\r\n                                    <Col xs={4}>\r\n                                        <Flex>\r\n                                            <h4 className={'mr-16'}>Страхователь </h4>\r\n                                            <Button onClick={() => !insurantIsOwner && setInsurant('person')}\r\n                                                    gray={!isEqual(insurantIsOwner ? owner : insurant, 'person')}\r\n                                                    className={'mr-16'}\r\n                                                    type={'button'}>Физ. лицо</Button>\r\n                                            <Button onClick={() => !insurantIsOwner && setInsurant('organization')}\r\n                                                    gray={!isEqual(insurantIsOwner ? owner : insurant, 'organization')}\r\n                                                    type={'button'}>Юр.\r\n                                                лицо</Button>\r\n                                        </Flex>\r\n                                    </Col>\r\n                                    <Col xs={8} className={'text-right'}>\r\n                                        {isEqual(insurantIsOwner ? owner : insurant, 'person') &&\r\n                                            <Flex justify={'flex-end'}>\r\n                                                <Field\r\n                                                    defaultValue={insurantIsOwner ? passportSeries : insurantPassportSeries}\r\n                                                    onChange={(e) => setInsurantPassportSeries(upperCase(e.target.value))}\r\n                                                    className={'mr-16'} style={{width: 75}}\r\n                                                    property={{\r\n                                                        hideLabel: true, mask: 'aa', placeholder: 'AA', maskChar: '_'\r\n                                                    }}\r\n                                                    name={'insurantPassportSeries'}\r\n                                                    type={'input-mask'}\r\n                                                />\r\n                                                <Field\r\n                                                    defaultValue={insurantIsOwner ? passportNumber : insurantPassportNumber}\r\n                                                    onChange={(e) => setInsurantPassportNumber(e.target.value)}\r\n                                                    property={{\r\n                                                        hideLabel: true,\r\n                                                        mask: '9999999',\r\n                                                        placeholder: '1234567',\r\n                                                        maskChar: '_'\r\n                                                    }} name={'insurantPassportNumber'} type={'input-mask'}/>\r\n\r\n                                                <Field defaultValue={insurantIsOwner ? birthDate : null}\r\n                                                       className={'ml-15'}\r\n                                                       property={{\r\n                                                           hideLabel: true,\r\n                                                           placeholder: 'Дата рождения',\r\n                                                           onChange: (e) => setInsurantBirthDate(e)\r\n                                                       }}\r\n                                                       name={'birthDate'} type={'datepicker'}/>\r\n                                                <Button onClick={() => getInfo('insurant')} className={'ml-15'}\r\n                                                        type={'button'}>Получить\r\n                                                    данные</Button>\r\n                                            </Flex>}\r\n                                        {isEqual(insurantIsOwner ? owner : insurant, 'organization') &&\r\n                                            <Flex justify={'flex-end'}>\r\n                                                <Field defaultValue={insurantIsOwner ? inn : null}\r\n                                                       onChange={(e) => setInsurantInn(e.target.value)} property={{\r\n                                                    hideLabel: true,\r\n                                                    mask: '999999999',\r\n                                                    placeholder: 'Inn',\r\n                                                    maskChar: '_'\r\n                                                }} name={'insurantInn'} type={'input-mask'}/>\r\n\r\n                                                <Button onClick={() => getOrgInfo('insurant')} className={'ml-15'}\r\n                                                        type={'button'}>Получить\r\n                                                    данные</Button>\r\n                                            </Flex>}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <hr className={'mt-15 mb-15'}/>\r\n                            </Col>\r\n                            {isEqual(insurantIsOwner ? owner : insurant, 'person') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'lastNameLatin')}\r\n                                        label={'Lastname'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.lastname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'firstNameLatin')}\r\n                                        label={'Firstname'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.firstname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'middleNameLatin')}\r\n                                        label={'Middlename'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.middlename'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'startDate')}\r\n                                           label={'Дата выдачи паспорта'}\r\n                                           type={'datepicker'}\r\n                                           name={'owner.person.passportData.startDate'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'issuedBy')}\r\n                                           label={'Кем выдан'}\r\n                                           type={'input'}\r\n                                           name={'owner.person.passportData.issuedBy'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'gender')}\r\n                                        options={genderList}\r\n                                        label={'Gender'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.gender'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'pinfl')}\r\n                                        label={'ПИНФЛ'} type={'input'}\r\n                                        name={'owner.person.passportData.pinfl'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.phone') : null}\r\n                                        label={'Phone'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.email') : null}\r\n                                        label={'Email'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={residentTypeList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.residentType') : null}\r\n                                        label={'Resident type'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.residentType'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.driverLicenseSeria') : null}\r\n                                        label={'Серия вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.driverLicenseSeria'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.driverLicenseNumber') : null}\r\n                                        label={'Номер вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.driverLicenseNumber'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'birthCountry')}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'owner.person.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={regionList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'regionId')}\r\n                                        label={'Region'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.regionId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        options={districtList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.districtId'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'areaTypeId') : null}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? passportSeries : insurantPassportSeries}\r\n                                        type={'input'}\r\n                                        name={'owner.person.passportData.seria'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? passportNumber :insurantPassportNumber}\r\n                                        type={'input'}\r\n                                        name={'owner.person.passportData.number'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={dayjs(insurantIsOwner ? birthDate : insurantBirthDate).format(\"YYYY-MM-DD\")}\r\n                                        type={'input'}\r\n                                        name={'owner.person.birthDate'}/>\r\n                                </Col>\r\n\r\n                            </>}\r\n                            {isEqual(insurantIsOwner ? owner : insurant, 'organization') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'name')}\r\n                                           label={'Наименование'} type={'input'}\r\n                                           name={'owner.organization.name'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field  defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.representativeName'):null} label={'Руководитель'} type={'input'}\r\n                                           name={'owner.organization.representativeName'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.position'):null} label={'Должность'} type={'input'}\r\n                                           name={'owner.organization.position'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.email'):null}\r\n                                        label={'Email'} type={'input'}\r\n                                        name={'owner.organization.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'phone',get(otherPrams, 'insurant.organization.phone'))}\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        label={'Телефон'} type={'input'}\r\n                                        name={'owner.organization.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field\r\n                                    defaultValue={parseInt(get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'oked'))}\r\n                                    label={'Oked'}\r\n                                    params={{required: true, valueAsString: true}}\r\n                                    options={okedList}\r\n                                    type={'select'}\r\n                                    name={'owner.organization.oked'}/></Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.checkingAccount'):null} label={'Расчетный счет'} type={'input'}\r\n                                           name={'owner.organization.checkingAccount'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.ownershipFormId'):null} label={'Форма собственности'}\r\n                                                   options={ownershipFormList}\r\n                                                   type={'select'}\r\n                                                   name={'owner.organization.ownershipFormId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'birthCountry', 210)}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'owner.organization.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.regionId'):null} label={'Область'} params={{required: true}} options={regionList}\r\n                                                   type={'select'}\r\n                                                   name={'owner.organization.regionId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'districtId',get(otherPrams, 'insurant.organization.districtId'))}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'owner.organization.districtId'}/>\r\n                                </Col>\r\n\r\n\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'areaTypeId'):null}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'owner.organization.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? inn : insurantInn}\r\n                                        type={'input'}\r\n                                        name={'owner.organization.inn'}/>\r\n                                </Col>\r\n\r\n                            </>}\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Убыточность предыдущих периодов</Title></Col>\r\n                            <Col xs={3}>\r\n                                <Field params={{required: true}} label={'Сумма старховых возмещений в предыдущем году'}\r\n                                       type={'number-format-input'}\r\n                                       name={'lastYearPayment'}/>\r\n                            </Col>\r\n                            <Col xs={3}><Field params={{required: true}} name={'lastYearInsurancePremium'}\r\n                                               label={'Сумма старховой премии в предыдущем году '}\r\n                                               type={'number-format-input'}\r\n                            /></Col>\r\n                            <Col xs={3}><Field params={{required: true}}\r\n                                               defaultValue={get(ratioResponse, 'lossRatio', 0)}\r\n                                               property={{disabled: true}}\r\n                                               name={'lossRatio'}\r\n                                               label={'Уровень убыточности '}\r\n                                               type={'input'}\r\n                            /></Col>\r\n                            <Col xs={3}><Field params={{required: true}} property={{disabled: true}}\r\n                                               defaultValue={get(ratioResponse, 'lossCoefficient', 0)}\r\n                                               name={'lossCoefficient'}\r\n                                               label={'Коэффициент страховых тарифов'}\r\n                                               type={'number-format-input'}\r\n                            /></Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Объекты страхования</Title></Col>\r\n                            <Col xs={12}>\r\n                                <Flex justify={'flex-end'}>\r\n                                    <Button\r\n                                        onClick={() => setVisible(true)} className={'ml-15'}\r\n                                        type={'button'}>Добавить</Button></Flex>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <div className={'horizontal-scroll mt-15 mb-25'}>\r\n                                    <Table bordered hideThead={false}\r\n                                           thead={[<Checkbox onChange={(e) => {\r\n                                               if (e.target?.checked) {\r\n                                                   setIdList(policies.map((_policy,index) => index))\r\n                                               } else {\r\n                                                   setIdList([])\r\n                                               }\r\n                                           }}/>,'№ ', 'Вид ТС', 'Модель ТС', 'Гос.номер', 'Страховая премия', 'Страховая сумма', 'Action']}>\r\n                                        {\r\n                                            policies.map((item, index) => <tr>\r\n                                                <td><Checkbox checked={includes(idList,index)} onChange={(e) => {\r\n                                                    if (e.target?.checked) {\r\n                                                        setIdList(prev => ([...prev, index]))\r\n                                                    } else {\r\n                                                        setIdList(idList.filter(id => !isEqual(id, index)))\r\n                                                    }\r\n                                                }}/></td>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{get(find(vehicleTypeList, (_vehicle) => get(_vehicle, 'value') == get(item, 'objects[0].vehicle.vehicleTypeId')), 'label', '-')}</td>\r\n                                                <td>{get(item, 'objects[0].vehicle.modelCustomName')}</td>\r\n                                                <td>{get(item, 'objects[0].vehicle.govNumber')}</td>\r\n                                                <td><NumberFormat value={get(item, 'insurancePremium', 0)}\r\n                                                                  displayType={'text'} thousandSeparator={' '}/></td>\r\n                                                <td><NumberFormat value={get(item, 'insuranceSum', 0)}\r\n                                                                  displayType={'text'} thousandSeparator={' '}/></td>\r\n\r\n                                                <td><Trash2\r\n                                                    onClick={() => setPolicies(policies.filter((d, i) => i != index))}\r\n                                                    className={'cursor-pointer'} color={'red'}/></td>\r\n                                            </tr>)\r\n                                        }\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Агентсткое вознограждение и РПМ</Title></Col>\r\n                            <Col xs={8}>\r\n                                <Row>\r\n                                    <Col xs={12} className={'mb-25'}>\r\n                                        <Field\r\n                                            options={[{label: t('No agent'), value: undefined}, ...agentsList]}\r\n                                            label={'Агент'}\r\n                                            type={'select'}\r\n                                            name={'agentId'}/>\r\n                                    </Col>\r\n\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            property={{\r\n                                                type: 'number',\r\n                                                disabled: isEqual(agentId, undefined),\r\n                                                valueAsNumber: true\r\n                                            }}\r\n                                            defaultValue={isEqual(agentId, undefined) ? 0 : 10}\r\n                                            label={'Вознограждение %'}\r\n                                            type={'input'}\r\n                                            name={'agentReward'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            defaultValue={5}\r\n                                            property={{disabled: true}}\r\n                                            label={'Отчисления в РПМ  %'}\r\n                                            type={'input'}\r\n                                            name={'rpm'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            defaultValue={round(rewardPercent * sumBy(policies, 'insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'comission'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={round(rpmPercent * sumBy(policies, 'insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'rpmSum'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Modal title={'Добавление объекта страхования'} hide={() => setVisible(false)} visible={visible}>\r\n                {isLoadingVehicleInfo && <OverlayLoader/>}\r\n                <Form\r\n                    formRequest={({data: item}) => {\r\n                        if (!isEmpty(get(item, 'vehicle'))) {\r\n                            setPolicies(prev => ([...prev, get(item, 'vehicle')]));\r\n                        }\r\n                        setVisible(false)\r\n                    }}\r\n                    getValueFromField={(value, name) => getFieldData(name, value)}\r\n                    footer={<Flex className={'mt-32'}><Button>Добавить</Button></Flex>}>\r\n                    <Row align={'end'}>\r\n                        <Col xs={9} className={' mt-15'}>\r\n                            <Flex align={'items-end'}>\r\n                                <Field params={{required: true}} onChange={(e) => setGovNumber(e.target.value)}\r\n                                       className={'mr-16'}\r\n                                       label={'Гос.номер'}\r\n                                       name={'vehicle.objects[0].vehicle.govNumber'}\r\n                                       type={'input'}\r\n                                />\r\n                                <Field params={{required: true}} className={'mr-16'}\r\n                                       onChange={(e) => setTechPassportSeria(e.target.value)}\r\n                                       name={'vehicle.objects[0].vehicle.techPassport.seria'}\r\n                                       type={'input'}\r\n                                       label={'Серия тех.паспорта'}\r\n                                />\r\n\r\n                                <Field params={{required: true}} onChange={(e) => setTechPassportNumber(e.target.value)}\r\n                                       name={'vehicle.objects[0].vehicle.techPassport.number'} type={'input'}\r\n                                       label={'Номер тех.паспорта'}\r\n                                />\r\n\r\n                            </Flex></Col>\r\n                        <Col xs={3}>\r\n                            <Button onClick={() => getVehicleInfo()} className={'ml-15'}\r\n                                    type={'button'}>Получить\r\n                                данные</Button>\r\n                        </Col>\r\n                        <Col xs={12}>\r\n                            <hr className={'mt-15'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   options={vehicleTypeList}\r\n                                   defaultValue={get(vehicle, 'vehicleTypeId', 0)} label={'Вид ТС'}\r\n                                   type={'select'}\r\n                                   name={'vehicle.objects[0].vehicle.vehicleTypeId'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   defaultValue={get(vehicle, 'modelName')} label={'Модель ТС'}\r\n                                   type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.modelCustomName'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   defaultValue={get(vehicle, 'bodyNumber')} label={'Номер кузова (шасси)'}\r\n                                   type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.bodyNumber'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{valueAsNumber: true}}\r\n                                defaultValue={get(vehicle, 'liftingCapacity',0)} label={'Грузоподъемность'}\r\n                                property={{type: 'number'}}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.liftingCapacity'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{valueAsNumber: true}}\r\n                                defaultValue={get(vehicle, 'seats')} label={'Количество мест сидения'}\r\n                                property={{type: 'number',max: 1000}}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.numberOfSeats'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}} defaultValue={get(vehicle, 'issueYear')}\r\n                                   label={'Год выпуска'} type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.issueYear'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field defaultValue={get(vehicle, 'engineNumber')}\r\n                                   label={'Номер двигателя'} type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.engineNumber'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                label={'Иностранный'} type={'switch'}\r\n                                name={'vehicle.objects[0].vehicle.isForeign'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   options={regionList}\r\n                                   defaultValue={get(vehicle, 'regionId')} label={'Регион регистрации'}\r\n                                   type={'select'}\r\n                                   name={'vehicle.objects[0].vehicle.regionId'}/>\r\n                        </Col>\r\n                        <Col xs={12} className={'mt-15'}>\r\n                            <hr/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required:true,valueAsNumber: true}}\r\n                                property={{type: 'number', max: 1000}}\r\n                                defaultValue={get(vehicle, 'passengerCapacity', 0)}\r\n                                label={'Пассажировместимость ТС'}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.passengerCapacity'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled:true}}\r\n                                defaultValue={44000000}\r\n                                label={'Страховая сумма на одного пассажира'}\r\n                                type={'number-format-input'}\r\n                                name={'insuranceSumForPassenger'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'insuranceSum', 0)}\r\n                                label={'Страховая сумма'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insuranceSum'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'annualBaseRate', 0)}\r\n                                label={'Годовая базовая ставка'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insuranceRate'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'insurancePremium', 0)}\r\n                                label={'Страховая премия'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insurancePremium'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'healthLifeDamageSum', 0)}\r\n                                type={'input'}\r\n                                name={'vehicle.healthLifeDamageSum'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'propertyDamageSum', 0)}\r\n                                type={'input'}\r\n                                name={'vehicle.propertyDamageSum'}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Modal>\r\n        </Section>\r\n    </>);\r\n};\r\n\r\nexport default CreateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport CreateContainer from \"../../containers/osgop/CreateContainer\";\r\n\r\nconst Styled = styled.div`\r\n  .form-group {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .rodal-dialog {\r\n    height: unset !important;\r\n    max-height: unset !important;\r\n    top: 50% !important;\r\n    bottom: unset !important;\r\n    transform: translateY(-50%);\r\n    min-width: 1000px !important;\r\n    max-width: 60% !important;\r\n  }\r\n\r\n`;\r\nconst CreatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <CreateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default CreatePage;"],"names":["getEndDateByInsuranceTerm","term","startDate","isNil","get","dayjs","add","toDate","subtract","CreateContainer","owner","setOwner","useState","ownerPerson","setOwnerPerson","ownerOrganization","setOwnerOrganization","insurant","setInsurant","insurantPerson","setInsurantPerson","insurantOrganization","setInsurantOrganization","vehicle","setVehicle","passportSeries","setPassportSeries","passportNumber","setPassportNumber","birthDate","setBirthDate","insurantPassportSeries","setInsurantPassportSeries","insurantPassportNumber","setInsurantPassportNumber","insurantBirthDate","setInsurantBirthDate","inn","setInn","insurantInn","setInsurantInn","insuranceTerm","setInsuranceTerm","policeStartDate","setPoliceStartDate","rpmPercent","setRpmPercent","rewardPercent","setRewardPercent","govNumber","setGovNumber","techPassportSeria","setTechPassportSeria","techPassportNumber","setTechPassportNumber","insurantIsOwner","setInsuranttIsOwner","visible","setVisible","lastYearPayment","setlastYearPayment","lastYearInsurancePremium","setLastYearInsurancePremium","ratioResponse","setRatioResponse","agencyId","setAgencyId","agentId","setAgentId","regionId","setRegionId","otherPrams","setOtherParams","idList","setIdList","osgopCalculateData","setOsgopCalculateData","insuranceSumForPassenger","passengerCapacity","vehicleTypeId","lossRatio","osgopCalculateResponse","setOsgopCalculateResponse","policies","setPolicies","navigate","useNavigate","t","useTranslation","setBreadcrumbs","useStore","state","breadcrumbs","useMemo","id","title","path","user","useEffect","data","filials","useGetAllQuery","key","KEYS","agencies","url","URLS","filialList","getSelectOptionsListFromData","insuranceTerms","isLoading","isLoadingInsuranceTerms","insuranceTermsList","region","isLoadingRegion","regions","regionList","genders","genderList","residentTypes","residentTypeList","vehicleTypes","vehicleTypeList","ownershipForms","ownershipFormList","agents","params","branch","enabled","agentsList","country","isLoadingCountry","countries","countryList","okeds","okedList","areaTypes","areaTypesList","district","districts","districtList","mutate","getPersonalInfoRequest","isLoadingPersonalInfo","usePostQuery","listKeyId","personalInfoProvider","getOrganizationInfoRequest","isLoadingOrganizationInfo","organizationInfoProvider","getVehicleInfoRequest","isLoadingVehicleInfo","vehicleInfoProvider","getRatioRequest","getRatio","hideSuccessToast","calcRequest","osgopCalculate","createRequest","isLoadingPost","osgopCreate","getInfo","type","arguments","length","undefined","attributes","format","onSuccess","_ref","getOrgInfo","_ref2","getFieldData","name","value","isEqual","prev","parseInt","_ref5","every","values","_item","insuranceTermId","_ref4","_jsx","OverlayLoader","_jsxs","_Fragment","children","Panel","Row","Col","xs","Search","Section","Title","Form","formRequest","_ref6","rpmSum","agentReward","insurantType","ownerType","rest","Number","person","organization","filter","_policy","index","includes","_ref7","response","concat","getValueFromField","footer","Flex","className","Button","gutterWidth","style","borderRight","align","green","Field","disabled","defaultValue","label","required","options","property","hideLabel","sumBy","onChange","val","dateFormat","find","_insuranceTerm","onClick","gray","justify","width","mask","placeholder","maskChar","upperCase","e","target","pattern","message","noMaxWidth","valueAsString","Checkbox","checked","Table","bordered","hideThead","thead","_e$target","map","item","_e$target2","_vehicle","NumberFormat","displayType","thousandSeparator","Trash2","d","i","color","valueAsNumber","round","Modal","hide","_ref8","isEmpty","_ref3","toast","warn","max","Styled","styled","div","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}