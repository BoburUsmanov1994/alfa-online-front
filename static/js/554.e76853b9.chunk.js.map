{"version":3,"file":"static/js/554.e76853b9.chunk.js","mappings":"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","sources":["modules/agreement/containers/osgop/ListContainer.jsx","modules/agreement/pages/osgop/ListPage.jsx"],"sourcesContent":["import React, {useEffect, useMemo} from 'react';\r\nimport { useStore} from \"../../../../store\";\r\nimport {get} from \"lodash\";\r\nimport GridView from \"../../../../containers/grid-view/grid-view\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst ListContainer = ({...rest}) => {\r\n    const {t} = useTranslation()\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [\r\n        {\r\n            id: 1,\r\n            title: 'Продукты',\r\n            path: '/osgop',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Все продукты',\r\n            path: '/osgop',\r\n        }\r\n    ], [])\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const ModalBody = ({data, rowId = null}) => <>\r\n        <Field name={'name'} type={'input'} label={'Название продукта'} defaultValue={rowId ? get(data, 'name') : null}\r\n               params={{required: true}}/>\r\n    </>\r\n\r\n    return (\r\n        <>\r\n            <GridView\r\n                ModalBody={ModalBody}\r\n                tableHeaderData={[\r\n                    {\r\n                        id: 3,\r\n                        key: 'seria',\r\n                        title: 'Policy seria',\r\n                    },\r\n                    {\r\n                        id: 4,\r\n                        key: 'number',\r\n                        title: 'Policy number',\r\n                    },\r\n                    {\r\n                        id: 5,\r\n                        key: 'owner',\r\n                        title: 'Owner',\r\n                        render: ({row}) => get(row, 'owner.person') ? `${get(row, 'owner.person.fullName.lastname')} ${get(row, 'owner.person.fullName.firstname')}  ${get(row, 'owner.person.fullName.middlename')}` : get(row, 'owner.organization.name')\r\n                    },\r\n                    {\r\n                        id: 55,\r\n                        key: 'insurant',\r\n                        title: 'Isnurant',\r\n                        render: ({row}) => get(row, 'insurant.person') ? `${get(row, 'insurant.person.fullName.lastname')} ${get(row, 'insurant.person.fullName.firstname')}  ${get(row, 'insurant.person.fullName.middlename')}` : get(row, 'insurant.organization.name')\r\n                    },\r\n                    {\r\n                        id: 6,\r\n                        key: 'premium',\r\n                        title: 'Insurance premium',\r\n                        render: ({value}) => <NumberFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n                    },\r\n                    {\r\n                        id: 7,\r\n                        key: 'sum',\r\n                        title: 'Insurance sum',\r\n                        render: ({value}) => <NumberFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n                    },\r\n                    {\r\n                        id: 8,\r\n                        key: 'premium',\r\n                        title: 'Оплачено',\r\n                        render: ({value, row}) => get(row, 'status') == 'payed' ?\r\n                            <NumberFormat displayType={'text'} thousandSeparator={' '} value={value}/> : 0\r\n                    },\r\n                    {\r\n                        id: 9,\r\n                        key: 'status',\r\n                        title: 'Status',\r\n                    },\r\n\r\n                ]}\r\n                keyId={KEYS.osgopList}\r\n                url={URLS.osgopList}\r\n                title={t('Osgop agreements list')}\r\n                responseDataKey={'result.docs'}\r\n                viewUrl={'/osgop/view'}\r\n                createUrl={'/osgop/create'}\r\n                updateUrl={'/osgop/update'}\r\n                isHideColumn\r\n                dataKey={'osgop_formId'}\r\n                deleteUrl={URLS.osgopDelete}\r\n                deleteParam={'osgop_formId'}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport ListContainer from \"../../containers/osgop/ListContainer\";\r\n\r\nconst Styled = styled.div`\r\n`;\r\nconst ListPage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <ListContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default ListPage;"],"names":["_ref","rest","t","useTranslation","setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","id","title","path","useEffect","_jsx","_Fragment","children","GridView","ModalBody","_ref2","data","rowId","Field","name","type","label","defaultValue","params","required","tableHeaderData","key","render","_ref3","row","concat","_ref4","_ref5","value","NumberFormat","displayType","thousandSeparator","_ref6","_ref7","keyId","KEYS","osgopList","url","URLS","responseDataKey","viewUrl","createUrl","updateUrl","isHideColumn","dataKey","deleteUrl","osgopDelete","deleteParam","Styled","styled","div","_templateObject","_taggedTemplateLiteral","ListContainer"],"sourceRoot":""}