{"version":3,"file":"static/js/421.e3370c36.chunk.js","mappings":"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","sources":["modules/agreement/containers/osgop/CreateContainer.jsx","modules/agreement/pages/osgop/CreatePage.jsx","../node_modules/react-feather/dist/icons/trash-2.js"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\r\nimport {useStore} from \"../../../../store\";\r\nimport {find, get, every, isEqual, isNil, round, upperCase, values, isEmpty, sumBy, includes} from \"lodash\";\r\nimport Panel from \"../../../../components/panel\";\r\nimport Search from \"../../../../components/search\";\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Section from \"../../../../components/section\";\r\nimport Title from \"../../../../components/ui/title\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Flex from \"../../../../components/flex\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport {useGetAllQuery, usePostQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport {OverlayLoader} from \"../../../../components/loader\";\r\nimport dayjs from \"dayjs\";\r\nimport {toast} from \"react-toastify\";\r\nimport Checkbox from 'rc-checkbox';\r\nimport Modal from \"../../../../components/modal\";\r\nimport Table from \"../../../../components/table\";\r\nimport {Trash2} from \"react-feather\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nconst getEndDateByInsuranceTerm = (term, startDate) => {\r\n    if (!isNil(term)) {\r\n        if (get(term, 'prefix') == 'day') {\r\n            return dayjs(startDate).add(get(term, 'value') - 1, get(term, 'prefix')).toDate()\r\n        }\r\n        if (get(term, 'prefix') == 'month') {\r\n            return dayjs(startDate).add(get(term, 'value'), get(term, 'prefix')).subtract(1, 'day').toDate()\r\n        }\r\n        if (get(term, 'prefix') == 'year') {\r\n            return dayjs(startDate).add(get(term, 'value'), get(term, 'prefix')).subtract(1, 'day').toDate()\r\n        }\r\n    }\r\n    return dayjs()\r\n}\r\n\r\nconst CreateContainer = () => {\r\n    const [owner, setOwner] = useState('person')\r\n    const [ownerPerson, setOwnerPerson] = useState(null)\r\n    const [ownerOrganization, setOwnerOrganization] = useState(null)\r\n    const [insurant, setInsurant] = useState('person')\r\n    const [insurantPerson, setInsurantPerson] = useState(null)\r\n    const [insurantOrganization, setInsurantOrganization] = useState(null)\r\n    const [vehicle, setVehicle] = useState(null)\r\n    const [passportSeries, setPassportSeries] = useState(null)\r\n    const [passportNumber, setPassportNumber] = useState(null)\r\n    const [birthDate, setBirthDate] = useState(null)\r\n    const [insurantPassportSeries, setInsurantPassportSeries] = useState(null)\r\n    const [insurantPassportNumber, setInsurantPassportNumber] = useState(null)\r\n    const [insurantBirthDate, setInsurantBirthDate] = useState(null)\r\n    const [inn, setInn] = useState(null)\r\n    const [insurantInn, setInsurantInn] = useState(null)\r\n    const [insuranceTerm, setInsuranceTerm] = useState(null)\r\n    const [policeStartDate, setPoliceStartDate] = useState(dayjs())\r\n    const [rpmPercent, setRpmPercent] = useState(0)\r\n    const [rewardPercent, setRewardPercent] = useState(0)\r\n    const [govNumber, setGovNumber] = useState(null)\r\n    const [techPassportSeria, setTechPassportSeria] = useState(null)\r\n    const [techPassportNumber, setTechPassportNumber] = useState(null)\r\n    const [insurantIsOwner, setInsuranttIsOwner] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n    const [lastYearPayment, setlastYearPayment] = useState(null)\r\n    const [lastYearInsurancePremium, setLastYearInsurancePremium] = useState(null)\r\n    const [ratioResponse, setRatioResponse] = useState({})\r\n    const [agencyId, setAgencyId] = useState(null)\r\n    const [agentId, setAgentId] = useState(null)\r\n    const [regionId, setRegionId] = useState(null)\r\n    const [otherPrams, setOtherParams] = useState({})\r\n    const [idList, setIdList] = useState([])\r\n    const [osgopCalculateData, setOsgopCalculateData] = useState({\r\n        insuranceSumForPassenger: 44000000,\r\n        passengerCapacity: 0,\r\n        vehicleTypeId: 0,\r\n        lossRatio: 0\r\n    })\r\n    const [osgopCalculateResponse, setOsgopCalculateResponse] = useState({})\r\n    const [policies, setPolicies] = useState([])\r\n\r\n    const navigate = useNavigate();\r\n    const {t} = useTranslation()\r\n\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [{\r\n        id: 1, title: 'OSGOP', path: '/osgop',\r\n    }, {\r\n        id: 2, title: 'Добавить OSGOP', path: '/osgop/create',\r\n    }], [])\r\n    const user = useStore((state) => get(state, 'user'))\r\n\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n\r\n    const {data: filials} = useGetAllQuery({key: KEYS.agencies, url: URLS.agencies})\r\n    const filialList = getSelectOptionsListFromData(get(filials, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: insuranceTerms, isLoading: isLoadingInsuranceTerms} = useGetAllQuery({\r\n        key: KEYS.insuranceTerms, url: URLS.insuranceTerms\r\n    })\r\n    const insuranceTermsList = getSelectOptionsListFromData(get(insuranceTerms, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: region, isLoading: isLoadingRegion} = useGetAllQuery({\r\n        key: KEYS.regions, url: URLS.regions\r\n    })\r\n    const regionList = getSelectOptionsListFromData(get(region, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: genders} = useGetAllQuery({\r\n        key: KEYS.genders, url: URLS.genders\r\n    })\r\n    const genderList = getSelectOptionsListFromData(get(genders, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: residentTypes} = useGetAllQuery({\r\n        key: KEYS.residentTypes, url: URLS.residentTypes\r\n    })\r\n    const residentTypeList = getSelectOptionsListFromData(get(residentTypes, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: vehicleTypes} = useGetAllQuery({\r\n        key: KEYS.vehicleTypes, url: URLS.vehicleTypes\r\n    })\r\n    const vehicleTypeList = getSelectOptionsListFromData(get(vehicleTypes, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: ownershipForms} = useGetAllQuery({\r\n        key: KEYS.ownershipForms, url: URLS.ownershipForms\r\n    })\r\n    const ownershipFormList = getSelectOptionsListFromData(get(ownershipForms, `data.result`, []), 'id', 'name')\r\n\r\n\r\n    const {data: agents} = useGetAllQuery({\r\n        key: [KEYS.agents, agencyId],\r\n        url: URLS.agents,\r\n        params: {\r\n            params: {\r\n                branch: agencyId\r\n            }\r\n        },\r\n        enabled: !!(agencyId)\r\n    })\r\n    const agentsList = getSelectOptionsListFromData(get(agents, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: country, isLoading: isLoadingCountry} = useGetAllQuery({\r\n        key: KEYS.countries, url: URLS.countries\r\n    })\r\n    const countryList = getSelectOptionsListFromData(get(country, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: okeds} = useGetAllQuery({\r\n        key: KEYS.okeds, url: URLS.okeds\r\n    })\r\n    const okedList = getSelectOptionsListFromData(get(okeds, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: areaTypes} = useGetAllQuery({\r\n        key: KEYS.areaTypes, url: URLS.areaTypes\r\n    })\r\n    const areaTypesList = getSelectOptionsListFromData(get(areaTypes, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: district} = useGetAllQuery({\r\n        key: [KEYS.districts, regionId],\r\n        url: URLS.districts,\r\n        params: {\r\n            params: {\r\n                region: regionId\r\n            }\r\n        },\r\n        enabled: !!(regionId || get(ownerPerson, 'regionId'))\r\n    })\r\n    const districtList = getSelectOptionsListFromData(get(district, `data.result`, []), 'id', 'name')\r\n    const {\r\n        mutate: getPersonalInfoRequest, isLoading: isLoadingPersonalInfo\r\n    } = usePostQuery({listKeyId: KEYS.personalInfoProvider})\r\n\r\n    const {\r\n        mutate: getOrganizationInfoRequest, isLoading: isLoadingOrganizationInfo\r\n    } = usePostQuery({listKeyId: KEYS.organizationInfoProvider})\r\n\r\n    const {\r\n        mutate: getVehicleInfoRequest, isLoading: isLoadingVehicleInfo\r\n    } = usePostQuery({listKeyId: KEYS.vehicleInfoProvider})\r\n\r\n    const {\r\n        mutate: getRatioRequest\r\n    } = usePostQuery({listKeyId: KEYS.getRatio, hideSuccessToast: true})\r\n    const {\r\n        mutate: calcRequest\r\n    } = usePostQuery({listKeyId: KEYS.osgopCalculate, hideSuccessToast: true})\r\n\r\n    const {\r\n        mutate: createRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.osgopCreate})\r\n\r\n    const getInfo = (type = 'owner') => {\r\n        getPersonalInfoRequest({\r\n                url: URLS.personalInfoProvider, attributes: type == 'insurant' ? {\r\n                    birthDate: dayjs(insurantBirthDate).format('YYYY-MM-DD'),\r\n                    passportSeries: insurantPassportSeries,\r\n                    passportNumber: insurantPassportNumber\r\n                } : {\r\n                    birthDate: dayjs(birthDate).format('YYYY-MM-DD'), passportSeries, passportNumber\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    if (type == 'owner') {\r\n                        setOwnerPerson(get(data, 'result'));\r\n                    }\r\n                    if (type == 'insurant') {\r\n                        setInsurantPerson(get(data, 'result'));\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOrgInfo = (type = 'owner') => {\r\n        getOrganizationInfoRequest({\r\n                url: URLS.organizationInfoProvider, attributes: type == 'insurant' ? {\r\n                    inn: insurantInn\r\n                } : {\r\n                    inn: inn\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    if (type == 'owner') {\r\n                        setOwnerOrganization(get(data, 'result'))\r\n                    }\r\n                    if (type == 'insurant') {\r\n                        setInsurantOrganization(get(data, 'result'))\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getVehicleInfo = () => {\r\n        if (govNumber && techPassportNumber && techPassportSeria) {\r\n            getVehicleInfoRequest({\r\n                    url: URLS.vehicleInfoProvider, attributes: {\r\n                        govNumber,\r\n                        techPassportNumber,\r\n                        techPassportSeria\r\n                    }\r\n                },\r\n                {\r\n                    onSuccess: ({data}) => {\r\n                        setVehicle(get(data, 'result'))\r\n                    }\r\n                }\r\n            )\r\n        } else {\r\n            toast.warn('Please fill all fields')\r\n        }\r\n    }\r\n\r\n    const calculatePremium = () => {\r\n        calcRequest({\r\n                url: URLS.osgopCalculate, attributes: {...osgopCalculateData,insuranceTermId:insuranceTerm}\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    setOsgopCalculateResponse(get(data, 'result'))\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getRatio = () => {\r\n        getRatioRequest({\r\n                url: URLS.getRatio, attributes: {\r\n                    lastYearPayment,\r\n                    lastYearInsurancePremium\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n                    setRatioResponse(get(data, 'result'))\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const getFieldData = (name, value) => {\r\n        if (isEqual(name, 'terms')) {\r\n            setInsuranceTerm(value)\r\n        }\r\n        if (isEqual(name, 'insurant.person.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'insurant.organization.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'owner.organization.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'owner.person.regionId')) {\r\n            setRegionId(value)\r\n        }\r\n        if (isEqual(name, 'rpm')) {\r\n            setRpmPercent(value)\r\n        }\r\n        if (isEqual(name, 'agentReward')) {\r\n            setRewardPercent(value)\r\n        }\r\n        if (isEqual(name, 'agencyId')) {\r\n            setAgencyId(value)\r\n        }\r\n        if (isEqual(name, 'agentId')) {\r\n            setAgentId(value)\r\n        }\r\n        if (isEqual(name, 'insuranceTermId')) {\r\n            setInsuranceTerm(value)\r\n        }\r\n        if (isEqual(name, 'lastYearPayment')) {\r\n            setlastYearPayment(value)\r\n        }\r\n        if (isEqual(name, 'lastYearInsurancePremium')) {\r\n            setLastYearInsurancePremium(value)\r\n        }\r\n        if (isEqual(name, 'vehicle.objects[0].vehicle.passengerCapacity')) {\r\n            setOsgopCalculateData(prev => ({...prev, passengerCapacity: parseInt(value)}))\r\n        }\r\n        if (isEqual(name, 'vehicle.objects[0].vehicle.vehicleTypeId')) {\r\n            setOsgopCalculateData(prev => ({...prev, vehicleTypeId: parseInt(value)}))\r\n        }\r\n        if (isEqual(name, 'lossRatio')) {\r\n            setOsgopCalculateData(prev => ({...prev, lossRatio: parseInt(value)}))\r\n        }\r\n        setOtherParams(prev => ({...prev, [name]: value}))\r\n    }\r\n\r\n    const create = ({data}) => {\r\n        const {\r\n            insuranceSumForPassenger,\r\n            passengerCapacity,\r\n            birthDate,\r\n            passportNumber,\r\n            passportSeries,\r\n            insurantPassportSeries,\r\n            insurantPassportNumber,\r\n            insurantBirthDate,\r\n            rpmSum,\r\n            inn,\r\n            agentReward,\r\n            insurantInn,\r\n            insurant: insurantType,\r\n            owner: ownerType,\r\n            ...rest\r\n        } = data\r\n        createRequest({\r\n                url: URLS.osgopCreate, attributes: {\r\n                    agentReward:Number(agentReward),\r\n                    regionId: isEqual(owner , 'person') ? get(insurantType, 'person.regionId') : get(insurantType, 'organization.regionId'),\r\n                    insurantIsOwner,\r\n                    owner: isEqual(insurantIsOwner ? owner : insurant, 'person') ? {person: get(ownerType, 'person', {})} : {\r\n                        organization: {\r\n                            ...get(ownerType, 'organization', {})\r\n                        }\r\n                    },\r\n                    insurant: isEqual(owner, 'person') ? {person: get(insurantType, 'person', {})} : {\r\n                        organization: {\r\n                            ...get(insurantType, 'organization', {})\r\n                        }\r\n                    },\r\n                    policies: policies.filter((_policy,index)=>includes(idList,index)),\r\n                    ...rest\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data: response}) => {\r\n                    if (get(response, 'result.osgop_formId')) {\r\n                        navigate(`/osgop/view/${get(response, 'result.osgop_formId')}`);\r\n                    } else {\r\n                        navigate(`/osgop`);\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isNil(lastYearPayment) && !isNil(lastYearInsurancePremium)) {\r\n            getRatio()\r\n        }\r\n    }, [lastYearPayment, lastYearInsurancePremium])\r\n\r\n    useEffect(() => {\r\n        if (every(values(osgopCalculateData), (_item) => _item > 0 && !isNil(_item)) && insuranceTerm) {\r\n            calculatePremium()\r\n        }\r\n    }, [osgopCalculateData,insuranceTerm])\r\n\r\n\r\n    if (isLoadingRegion || isLoadingInsuranceTerms) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    return (<>\r\n        {(isLoadingCountry || isLoadingPersonalInfo || isLoadingOrganizationInfo || isLoadingVehicleInfo || isLoadingPost) &&\r\n            <OverlayLoader/>}\r\n        <Panel>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Search/>\r\n                </Col>\r\n            </Row>\r\n        </Panel>\r\n        <Section>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Title>Параметры полиса</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Form formRequest={create} getValueFromField={(value, name) => getFieldData(name, value)}\r\n                          footer={<Flex className={'mt-32'}><Button className={'mr-16'}>Сохранить</Button></Flex>}>\r\n                        <Row gutterWidth={60} className={'mt-32'}>\r\n                            <Col xs={4} style={{borderRight: '1px solid #DFDFDF'}}>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Статус</Col>\r\n                                    <Col xs={7}><Button green>Новый</Button></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Филиал</Col>\r\n                                    <Col xs={7}><Field disabled defaultValue={get(user, 'branch_Id.fond_id')}\r\n                                                       label={'Filial'} params={{required: true}} options={filialList}\r\n                                                       property={{hideLabel: true}} type={'select'}\r\n                                                       name={'agencyId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Серия договора:</Col>\r\n                                    <Col xs={7}><Field property={{hideLabel: true}} type={'input'}\r\n                                                       name={'seria'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Номер договора: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}} property={{hideLabel: true}}\r\n                                                       type={'input'}\r\n                                                       name={'number'}/></Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая сумма: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}}\r\n                                                       defaultValue={sumBy(policies, 'insuranceSum')}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'number-format-input'}\r\n                                                       name={'sum'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая премия: </Col>\r\n                                    <Col xs={7}><Field params={{required: true}}\r\n                                                       defaultValue={sumBy(policies, 'insurancePremium')}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'number-format-input'}\r\n                                                       name={'premium'}/></Col>\r\n                                </Row>\r\n\r\n\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Срок страхования:</Col>\r\n                                    <Col xs={7}><Field options={insuranceTermsList} params={{required: true}}\r\n                                                       label={'Insurance term'} property={{hideLabel: true}}\r\n                                                       type={'select'}\r\n                                                       name={'insuranceTermId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дата начала покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        params={{required: true}}\r\n                                        property={{\r\n                                            hideLabel: true,\r\n                                            onChange: (val) => setPoliceStartDate(val),\r\n                                            dateFormat: 'dd.MM.yyyy'\r\n                                        }}\r\n                                        type={'datepicker'}\r\n                                        name={'contractStartDate'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дача окончания покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={getEndDateByInsuranceTerm(find(get(insuranceTerms, `data.result`, []), (_insuranceTerm) => get(_insuranceTerm, 'id') == insuranceTerm), policeStartDate)}\r\n                                        disabled={!isEqual(insuranceTerm, 6)}\r\n                                        property={{hideLabel: true, dateFormat: 'dd.MM.yyyy'}} type={'datepicker'}\r\n                                        name={'contractEndDate'}/></Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Собственник </Title></Col>\r\n                            <Col xs={12}>\r\n                                <Row>\r\n                                    <Col xs={4}>\r\n                                        <Flex>\r\n                                            <h4 className={'mr-16'}>Собственник </h4>\r\n                                            <Button onClick={() => setOwner('person')}\r\n                                                    gray={!isEqual(owner, 'person')} className={'mr-16'}\r\n                                                    type={'button'}>Физ. лицо</Button>\r\n                                            <Button onClick={() => setOwner('organization')}\r\n                                                    gray={!isEqual(owner, 'organization')} type={'button'}>Юр.\r\n                                                лицо</Button>\r\n                                        </Flex>\r\n                                    </Col>\r\n                                    <Col xs={8} className={'text-right'}>\r\n                                        {isEqual(owner, 'person') && <Flex justify={'flex-end'}>\r\n                                            <Field\r\n                                                className={'mr-16'} style={{width: 75}}\r\n                                                property={{\r\n                                                    hideLabel: true, mask: 'aa', placeholder: 'AA', maskChar: '_',\r\n                                                    onChange: (val) => setPassportSeries(upperCase(val))\r\n                                                }}\r\n                                                name={'passportSeries'}\r\n                                                type={'input-mask'}\r\n                                            />\r\n                                            <Field property={{\r\n                                                hideLabel: true,\r\n                                                mask: '9999999',\r\n                                                placeholder: '1234567',\r\n                                                maskChar: '_',\r\n                                                onChange: (val) => setPassportNumber(val)\r\n                                            }} name={'passportNumber'} type={'input-mask'}/>\r\n\r\n                                            <Field className={'ml-15'}\r\n                                                   property={{\r\n                                                       hideLabel: true,\r\n                                                       placeholder: 'Дата рождения',\r\n                                                       onChange: (e) => setBirthDate(e)\r\n                                                   }}\r\n                                                   name={'birthDate'} type={'datepicker'}/>\r\n                                            <Button onClick={() => getInfo('owner')} className={'ml-15'}\r\n                                                    type={'button'}>Получить\r\n                                                данные</Button>\r\n                                        </Flex>}\r\n                                        {isEqual(owner, 'organization') && <Flex justify={'flex-end'}>\r\n                                            <Field onChange={(e) => setInn(e.target.value)} property={{\r\n                                                hideLabel: true,\r\n                                                mask: '999999999',\r\n                                                placeholder: 'Inn',\r\n                                                maskChar: '_'\r\n                                            }} name={'inn'} type={'input-mask'}/>\r\n\r\n                                            <Button onClick={() => getOrgInfo('owner')} className={'ml-15'}\r\n                                                    type={'button'}>Получить\r\n                                                данные</Button>\r\n                                        </Flex>}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <hr className={'mt-15 mb-15'}/>\r\n                            </Col>\r\n                            {isEqual(owner, 'person') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'lastNameLatin')}\r\n                                           label={'Lastname'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.lastname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'firstNameLatin')}\r\n                                           label={'Firstname'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.firstname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'middleNameLatin')}\r\n                                           label={'Middlename'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.middlename'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'startDate')}\r\n                                           label={'Дата выдачи паспорта'}\r\n                                           type={'datepicker'}\r\n                                           name={'insurant.person.passportData.startDate'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerPerson, 'issuedBy')}\r\n                                           label={'Кем выдан'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.passportData.issuedBy'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerPerson, 'gender')}\r\n                                        options={genderList}\r\n                                        label={'Gender'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.gender'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerPerson, 'pinfl')}\r\n                                           label={'ПИНФЛ'} type={'input'}\r\n                                           name={'insurant.person.passportData.pinfl'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        defaultValue={get(ownerPerson, 'phone')}\r\n                                        label={'Phone'}\r\n                                        type={'input'}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        name={'insurant.person.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(ownerPerson, 'email')}\r\n                                        label={'Email'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={residentTypeList}\r\n                                        defaultValue={get(ownerPerson, 'residentType')}\r\n                                        label={'Resident type'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.residentType'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        label={'Серия вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.driverLicenseSeria'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        label={'Номер вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.driverLicenseNumber'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(ownerPerson, 'birthCountry')}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'insurant.person.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={regionList}\r\n                                        defaultValue={get(ownerPerson, 'regionId')}\r\n                                        label={'Region'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.regionId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(ownerPerson, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.districtId'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={get(ownerPerson, 'areaTypeId')}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerPerson, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={passportSeries}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.passportData.seria'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={passportNumber}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.passportData.number'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={dayjs(birthDate).format(\"YYYY-MM-DD\")}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.birthDate'}/>\r\n                                </Col>\r\n                            </>}\r\n                            {isEqual(owner, 'organization') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}} defaultValue={get(ownerOrganization, 'name')}\r\n                                           label={'Наименование'} type={'input'}\r\n                                           name={'insurant.organization.name'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Руководитель'} type={'input'}\r\n                                           name={'insurant.organization.representativeName'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Должность'} type={'input'}\r\n                                           name={'insurant.organization.position'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerOrganization, 'email')} label={'Email'} type={'input'}\r\n                                           name={'insurant.organization.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={get(ownerOrganization, 'phone')} params={{\r\n                                        required: true,\r\n                                        pattern: {\r\n                                            value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                            message: 'Invalid format'\r\n                                        }\r\n                                    }}\r\n                                           property={{placeholder: '998XXXXXXXXX'}}\r\n                                           label={'Телефон'} type={'input'}\r\n                                           name={'insurant.organization.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={parseInt(get(ownerOrganization, 'oked'))}\r\n                                                   label={'Oked'} params={{required: true, valueAsString: true}}\r\n                                                   options={okedList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.oked'}/></Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field label={'Расчетный счет'} type={'input'}\r\n                                           name={'insurant.organization.checkingAccount'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field label={'Форма собственности'}\r\n                                                   options={ownershipFormList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.ownershipFormId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerOrganization, 'birthCountry', 210)}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'insurant.organization.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field label={'Область'} params={{required: true}} options={regionList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.regionId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(ownerOrganization, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'insurant.organization.districtId'}/>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={get(ownerOrganization, 'areaTypeId')}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(ownerOrganization, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'insurant.organization.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={inn}\r\n                                        type={'input'}\r\n                                        name={'insurant.organization.inn'}/>\r\n                                </Col>\r\n\r\n\r\n                            </>}\r\n                            <Col xs={12} className={'mt-15'}><Checkbox checked={insurantIsOwner}\r\n                                                                       onChange={(e) => setInsuranttIsOwner(e.target.checked)}\r\n                                                                       className={'mr-5'}/><strong>Собственник является\r\n                                Страхователем</strong></Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Страхователь </Title></Col>\r\n                            <Col xs={12}>\r\n                                <Row>\r\n                                    <Col xs={4}>\r\n                                        <Flex>\r\n                                            <h4 className={'mr-16'}>Страхователь </h4>\r\n                                            <Button onClick={() => !insurantIsOwner && setInsurant('person')}\r\n                                                    gray={!isEqual(insurantIsOwner ? owner : insurant, 'person')}\r\n                                                    className={'mr-16'}\r\n                                                    type={'button'}>Физ. лицо</Button>\r\n                                            <Button onClick={() => !insurantIsOwner && setInsurant('organization')}\r\n                                                    gray={!isEqual(insurantIsOwner ? owner : insurant, 'organization')}\r\n                                                    type={'button'}>Юр.\r\n                                                лицо</Button>\r\n                                        </Flex>\r\n                                    </Col>\r\n                                    <Col xs={8} className={'text-right'}>\r\n                                        {isEqual(insurantIsOwner ? owner : insurant, 'person') &&\r\n                                            <Flex justify={'flex-end'}>\r\n                                                <Field\r\n                                                    defaultValue={insurantIsOwner ? passportSeries : insurantPassportSeries}\r\n                                                    onChange={(e) => setInsurantPassportSeries(upperCase(e.target.value))}\r\n                                                    className={'mr-16'} style={{width: 75}}\r\n                                                    property={{\r\n                                                        hideLabel: true, mask: 'aa', placeholder: 'AA', maskChar: '_'\r\n                                                    }}\r\n                                                    name={'insurantPassportSeries'}\r\n                                                    type={'input-mask'}\r\n                                                />\r\n                                                <Field\r\n                                                    defaultValue={insurantIsOwner ? passportNumber : insurantPassportNumber}\r\n                                                    onChange={(e) => setInsurantPassportNumber(e.target.value)}\r\n                                                    property={{\r\n                                                        hideLabel: true,\r\n                                                        mask: '9999999',\r\n                                                        placeholder: '1234567',\r\n                                                        maskChar: '_'\r\n                                                    }} name={'insurantPassportNumber'} type={'input-mask'}/>\r\n\r\n                                                <Field defaultValue={insurantIsOwner ? birthDate : null}\r\n                                                       className={'ml-15'}\r\n                                                       property={{\r\n                                                           hideLabel: true,\r\n                                                           placeholder: 'Дата рождения',\r\n                                                           onChange: (e) => setInsurantBirthDate(e)\r\n                                                       }}\r\n                                                       name={'birthDate'} type={'datepicker'}/>\r\n                                                <Button onClick={() => getInfo('insurant')} className={'ml-15'}\r\n                                                        type={'button'}>Получить\r\n                                                    данные</Button>\r\n                                            </Flex>}\r\n                                        {isEqual(insurantIsOwner ? owner : insurant, 'organization') &&\r\n                                            <Flex justify={'flex-end'}>\r\n                                                <Field defaultValue={insurantIsOwner ? inn : null}\r\n                                                       onChange={(e) => setInsurantInn(e.target.value)} property={{\r\n                                                    hideLabel: true,\r\n                                                    mask: '999999999',\r\n                                                    placeholder: 'Inn',\r\n                                                    maskChar: '_'\r\n                                                }} name={'insurantInn'} type={'input-mask'}/>\r\n\r\n                                                <Button onClick={() => getOrgInfo('insurant')} className={'ml-15'}\r\n                                                        type={'button'}>Получить\r\n                                                    данные</Button>\r\n                                            </Flex>}\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <hr className={'mt-15 mb-15'}/>\r\n                            </Col>\r\n                            {isEqual(insurantIsOwner ? owner : insurant, 'person') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'lastNameLatin')}\r\n                                        label={'Lastname'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.lastname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'firstNameLatin')}\r\n                                        label={'Firstname'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.firstname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'middleNameLatin')}\r\n                                        label={'Middlename'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.fullName.middlename'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'startDate')}\r\n                                           label={'Дата выдачи паспорта'}\r\n                                           type={'datepicker'}\r\n                                           name={'owner.person.passportData.startDate'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'issuedBy')}\r\n                                           label={'Кем выдан'}\r\n                                           type={'input'}\r\n                                           name={'owner.person.passportData.issuedBy'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'gender')}\r\n                                        options={genderList}\r\n                                        label={'Gender'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.gender'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'pinfl')}\r\n                                        label={'ПИНФЛ'} type={'input'}\r\n                                        name={'owner.person.passportData.pinfl'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.phone') : null}\r\n                                        label={'Phone'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.email') : null}\r\n                                        label={'Email'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={residentTypeList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.residentType') : null}\r\n                                        label={'Resident type'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.residentType'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.driverLicenseSeria') : null}\r\n                                        label={'Серия вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.driverLicenseSeria'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.person.driverLicenseNumber') : null}\r\n                                        label={'Номер вод. удостоверения'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.driverLicenseNumber'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'birthCountry')}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'owner.person.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={regionList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'regionId')}\r\n                                        label={'Region'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.regionId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        options={districtList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'districtId')}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'owner.person.districtId'}/>\r\n                                </Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'areaTypeId') : null}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6} className={'mb-25'}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerPerson : insurantPerson, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'owner.person.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? passportSeries : insurantPassportSeries}\r\n                                        type={'input'}\r\n                                        name={'owner.person.passportData.seria'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? passportNumber :insurantPassportNumber}\r\n                                        type={'input'}\r\n                                        name={'owner.person.passportData.number'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={dayjs(insurantIsOwner ? birthDate : insurantBirthDate).format(\"YYYY-MM-DD\")}\r\n                                        type={'input'}\r\n                                        name={'owner.person.birthDate'}/>\r\n                                </Col>\r\n\r\n                            </>}\r\n                            {isEqual(insurantIsOwner ? owner : insurant, 'organization') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field params={{required: true}}\r\n                                           defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'name')}\r\n                                           label={'Наименование'} type={'input'}\r\n                                           name={'owner.organization.name'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field  defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.representativeName'):null} label={'Руководитель'} type={'input'}\r\n                                           name={'owner.organization.representativeName'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.position'):null} label={'Должность'} type={'input'}\r\n                                           name={'owner.organization.position'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.email'):null}\r\n                                        label={'Email'} type={'input'}\r\n                                        name={'owner.organization.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'phone',get(otherPrams, 'insurant.organization.phone'))}\r\n                                        params={{\r\n                                            required: true,\r\n                                            pattern: {\r\n                                                value: /^998(9[012345789]|6[125679]|7[01234569])[0-9]{7}$/,\r\n                                                message: 'Invalid format'\r\n                                            }\r\n                                        }}\r\n                                        property={{placeholder: '998XXXXXXXXX'}}\r\n                                        label={'Телефон'} type={'input'}\r\n                                        name={'owner.organization.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field\r\n                                    defaultValue={parseInt(get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'oked'))}\r\n                                    label={'Oked'}\r\n                                    params={{required: true, valueAsString: true}}\r\n                                    options={okedList}\r\n                                    type={'select'}\r\n                                    name={'owner.organization.oked'}/></Col>\r\n\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.checkingAccount'):null} label={'Расчетный счет'} type={'input'}\r\n                                           name={'owner.organization.checkingAccount'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.ownershipFormId'):null} label={'Форма собственности'}\r\n                                                   options={ownershipFormList}\r\n                                                   type={'select'}\r\n                                                   name={'owner.organization.ownershipFormId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'birthCountry', 210)}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        options={countryList}\r\n                                        name={'owner.organization.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field defaultValue={insurantIsOwner ? get(otherPrams, 'insurant.organization.regionId'):null} label={'Область'} params={{required: true}} options={regionList}\r\n                                                   type={'select'}\r\n                                                   name={'owner.organization.regionId'}/></Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={districtList}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'districtId',get(otherPrams, 'insurant.organization.districtId'))}\r\n                                        label={'District'}\r\n                                        type={'select'}\r\n                                        name={'owner.organization.districtId'}/>\r\n                                </Col>\r\n\r\n\r\n                                <Col xs={3}>\r\n                                    <Field\r\n                                        params={{required: true}}\r\n                                        options={areaTypesList}\r\n                                        defaultValue={insurantIsOwner ? get(otherPrams, 'areaTypeId'):null}\r\n                                        label={'Тип местности'}\r\n                                        type={'select'}\r\n                                        name={'areaTypeId'}/>\r\n                                </Col>\r\n                                <Col xs={6}>\r\n                                    <Field\r\n                                        noMaxWidth\r\n                                        params={{required: true}}\r\n                                        defaultValue={get(insurantIsOwner ? ownerOrganization : insurantOrganization, 'address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'owner.organization.address'}/>\r\n                                </Col>\r\n                                <Col xs={1} className={'mt-15'}>\r\n                                    <Field\r\n                                        property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                        defaultValue={insurantIsOwner ? inn : insurantInn}\r\n                                        type={'input'}\r\n                                        name={'owner.organization.inn'}/>\r\n                                </Col>\r\n\r\n                            </>}\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Убыточность предыдущих периодов</Title></Col>\r\n                            <Col xs={3}>\r\n                                <Field params={{required: true}} label={'Сумма старховых возмещений в предыдущем году'}\r\n                                       type={'number-format-input'}\r\n                                       name={'lastYearPayment'}/>\r\n                            </Col>\r\n                            <Col xs={3}><Field params={{required: true}} name={'lastYearInsurancePremium'}\r\n                                               label={'Сумма старховой премии в предыдущем году '}\r\n                                               type={'number-format-input'}\r\n                            /></Col>\r\n                            <Col xs={3}><Field params={{required: true}}\r\n                                               defaultValue={get(ratioResponse, 'lossRatio', 0)}\r\n                                               property={{disabled: true}}\r\n                                               name={'lossRatio'}\r\n                                               label={'Уровень убыточности '}\r\n                                               type={'input'}\r\n                            /></Col>\r\n                            <Col xs={3}><Field params={{required: true}} property={{disabled: true}}\r\n                                               defaultValue={get(ratioResponse, 'lossCoefficient', 0)}\r\n                                               name={'lossCoefficient'}\r\n                                               label={'Коэффициент страховых тарифов'}\r\n                                               type={'number-format-input'}\r\n                            /></Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Объекты страхования</Title></Col>\r\n                            <Col xs={12}>\r\n                                <Flex justify={'flex-end'}>\r\n                                    <Button\r\n                                        onClick={() => setVisible(true)} className={'ml-15'}\r\n                                        type={'button'}>Добавить</Button></Flex>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <div className={'horizontal-scroll mt-15 mb-25'}>\r\n                                    <Table bordered hideThead={false}\r\n                                           thead={[<Checkbox onChange={(e) => {\r\n                                               if (e.target?.checked) {\r\n                                                   setIdList(policies.map((_policy,index) => index))\r\n                                               } else {\r\n                                                   setIdList([])\r\n                                               }\r\n                                           }}/>,'№ ', 'Вид ТС', 'Модель ТС', 'Гос.номер', 'Страховая премия', 'Страховая сумма', 'Action']}>\r\n                                        {\r\n                                            policies.map((item, index) => <tr>\r\n                                                <td><Checkbox checked={includes(idList,index)} onChange={(e) => {\r\n                                                    if (e.target?.checked) {\r\n                                                        setIdList(prev => ([...prev, index]))\r\n                                                    } else {\r\n                                                        setIdList(idList.filter(id => !isEqual(id, index)))\r\n                                                    }\r\n                                                }}/></td>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{get(find(vehicleTypeList, (_vehicle) => get(_vehicle, 'value') == get(item, 'objects[0].vehicle.vehicleTypeId')), 'label', '-')}</td>\r\n                                                <td>{get(item, 'objects[0].vehicle.modelCustomName')}</td>\r\n                                                <td>{get(item, 'objects[0].vehicle.govNumber')}</td>\r\n                                                <td><NumberFormat value={get(item, 'insurancePremium', 0)}\r\n                                                                  displayType={'text'} thousandSeparator={' '}/></td>\r\n                                                <td><NumberFormat value={get(item, 'insuranceSum', 0)}\r\n                                                                  displayType={'text'} thousandSeparator={' '}/></td>\r\n\r\n                                                <td><Trash2\r\n                                                    onClick={() => setPolicies(policies.filter((d, i) => i != index))}\r\n                                                    className={'cursor-pointer'} color={'red'}/></td>\r\n                                            </tr>)\r\n                                        }\r\n                                    </Table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row gutterWidth={60} className={'mt-30'}>\r\n                            <Col xs={12} className={'mb-25'}><Title>Агентсткое вознограждение и РПМ</Title></Col>\r\n                            <Col xs={8}>\r\n                                <Row>\r\n                                    <Col xs={12} className={'mb-25'}>\r\n                                        <Field\r\n                                            options={[{label: t('No agent'), value: undefined}, ...agentsList]}\r\n                                            label={'Агент'}\r\n                                            type={'select'}\r\n                                            name={'agentId'}/>\r\n                                    </Col>\r\n\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            property={{\r\n                                                type: 'number',\r\n                                                disabled: isEqual(agentId, undefined),\r\n                                                valueAsNumber: true\r\n                                            }}\r\n                                            defaultValue={isEqual(agentId, undefined) ? 0 : 10}\r\n                                            label={'Вознограждение %'}\r\n                                            type={'input'}\r\n                                            name={'agentReward'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            defaultValue={5}\r\n                                            property={{disabled: true}}\r\n                                            label={'Отчисления в РПМ  %'}\r\n                                            type={'input'}\r\n                                            name={'rpm'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            params={{required: true}}\r\n                                            defaultValue={round(rewardPercent * sumBy(policies, 'insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'comission'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={round(rpmPercent * sumBy(policies, 'insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'rpmSum'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Modal title={'Добавление объекта страхования'} hide={() => setVisible(false)} visible={visible}>\r\n                {isLoadingVehicleInfo && <OverlayLoader/>}\r\n                <Form\r\n                    formRequest={({data: item}) => {\r\n                        if (!isEmpty(get(item, 'vehicle'))) {\r\n                            setPolicies(prev => ([...prev, get(item, 'vehicle')]));\r\n                        }\r\n                        setVisible(false)\r\n                    }}\r\n                    getValueFromField={(value, name) => getFieldData(name, value)}\r\n                    footer={<Flex className={'mt-32'}><Button>Добавить</Button></Flex>}>\r\n                    <Row align={'end'}>\r\n                        <Col xs={9} className={' mt-15'}>\r\n                            <Flex align={'items-end'}>\r\n                                <Field params={{required: true}} onChange={(e) => setGovNumber(e.target.value)}\r\n                                       className={'mr-16'}\r\n                                       label={'Гос.номер'}\r\n                                       name={'vehicle.objects[0].vehicle.govNumber'}\r\n                                       type={'input'}\r\n                                />\r\n                                <Field params={{required: true}} className={'mr-16'}\r\n                                       onChange={(e) => setTechPassportSeria(e.target.value)}\r\n                                       name={'vehicle.objects[0].vehicle.techPassport.seria'}\r\n                                       type={'input'}\r\n                                       label={'Серия тех.паспорта'}\r\n                                />\r\n\r\n                                <Field params={{required: true}} onChange={(e) => setTechPassportNumber(e.target.value)}\r\n                                       name={'vehicle.objects[0].vehicle.techPassport.number'} type={'input'}\r\n                                       label={'Номер тех.паспорта'}\r\n                                />\r\n\r\n                            </Flex></Col>\r\n                        <Col xs={3}>\r\n                            <Button onClick={() => getVehicleInfo()} className={'ml-15'}\r\n                                    type={'button'}>Получить\r\n                                данные</Button>\r\n                        </Col>\r\n                        <Col xs={12}>\r\n                            <hr className={'mt-15'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   options={vehicleTypeList}\r\n                                   defaultValue={get(vehicle, 'vehicleTypeId', 0)} label={'Вид ТС'}\r\n                                   type={'select'}\r\n                                   name={'vehicle.objects[0].vehicle.vehicleTypeId'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   defaultValue={get(vehicle, 'modelName')} label={'Модель ТС'}\r\n                                   type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.modelCustomName'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   defaultValue={get(vehicle, 'bodyNumber')} label={'Номер кузова (шасси)'}\r\n                                   type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.bodyNumber'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{valueAsNumber: true}}\r\n                                defaultValue={get(vehicle, 'liftingCapacity',0)} label={'Грузоподъемность'}\r\n                                property={{type: 'number'}}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.liftingCapacity'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{valueAsNumber: true}}\r\n                                defaultValue={get(vehicle, 'seats')} label={'Количество мест сидения'}\r\n                                property={{type: 'number',max: 1000}}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.numberOfSeats'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}} defaultValue={get(vehicle, 'issueYear')}\r\n                                   label={'Год выпуска'} type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.issueYear'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field defaultValue={get(vehicle, 'engineNumber')}\r\n                                   label={'Номер двигателя'} type={'input'}\r\n                                   name={'vehicle.objects[0].vehicle.engineNumber'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                label={'Иностранный'} type={'switch'}\r\n                                name={'vehicle.objects[0].vehicle.isForeign'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field params={{required: true}}\r\n                                   options={regionList}\r\n                                   defaultValue={get(vehicle, 'regionId')} label={'Регион регистрации'}\r\n                                   type={'select'}\r\n                                   name={'vehicle.objects[0].vehicle.regionId'}/>\r\n                        </Col>\r\n                        <Col xs={12} className={'mt-15'}>\r\n                            <hr/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required:true,valueAsNumber: true}}\r\n                                property={{type: 'number', max: 1000}}\r\n                                defaultValue={get(vehicle, 'passengerCapacity', 0)}\r\n                                label={'Пассажировместимость ТС'}\r\n                                type={'input'}\r\n                                name={'vehicle.objects[0].vehicle.passengerCapacity'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled:true}}\r\n                                defaultValue={44000000}\r\n                                label={'Страховая сумма на одного пассажира'}\r\n                                type={'number-format-input'}\r\n                                name={'insuranceSumForPassenger'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'insuranceSum', 0)}\r\n                                label={'Страховая сумма'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insuranceSum'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'annualBaseRate', 0)}\r\n                                label={'Годовая базовая ставка'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insuranceRate'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                params={{required: true}}\r\n                                property={{disabled: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'insurancePremium', 0)}\r\n                                label={'Страховая премия'}\r\n                                type={'number-format-input'}\r\n                                name={'vehicle.insurancePremium'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'healthLifeDamageSum', 0)}\r\n                                type={'input'}\r\n                                name={'vehicle.healthLifeDamageSum'}/>\r\n                        </Col>\r\n                        <Col xs={4} className={'mt-15'}>\r\n                            <Field\r\n                                property={{disabled: true, type: 'hidden', hideLabel: true}}\r\n                                defaultValue={get(osgopCalculateResponse, 'propertyDamageSum', 0)}\r\n                                type={'input'}\r\n                                name={'vehicle.propertyDamageSum'}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Modal>\r\n        </Section>\r\n    </>);\r\n};\r\n\r\nexport default CreateContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport CreateContainer from \"../../containers/osgop/CreateContainer\";\r\n\r\nconst Styled = styled.div`\r\n  .form-group {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .rodal-dialog {\r\n    height: unset !important;\r\n    max-height: unset !important;\r\n    top: 50% !important;\r\n    bottom: unset !important;\r\n    transform: translateY(-50%);\r\n    min-width: 1000px !important;\r\n    max-width: 60% !important;\r\n  }\r\n\r\n`;\r\nconst CreatePage = ({...rest}) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <CreateContainer/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default CreatePage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;"],"names":["getEndDateByInsuranceTerm","term","startDate","isNil","get","dayjs","add","toDate","subtract","useState","owner","setOwner","ownerPerson","setOwnerPerson","ownerOrganization","setOwnerOrganization","insurant","setInsurant","insurantPerson","setInsurantPerson","insurantOrganization","setInsurantOrganization","vehicle","setVehicle","passportSeries","setPassportSeries","passportNumber","setPassportNumber","birthDate","setBirthDate","insurantPassportSeries","setInsurantPassportSeries","insurantPassportNumber","setInsurantPassportNumber","insurantBirthDate","setInsurantBirthDate","inn","setInn","insurantInn","setInsurantInn","insuranceTerm","setInsuranceTerm","policeStartDate","setPoliceStartDate","rpmPercent","setRpmPercent","rewardPercent","setRewardPercent","govNumber","setGovNumber","techPassportSeria","setTechPassportSeria","techPassportNumber","setTechPassportNumber","insurantIsOwner","setInsuranttIsOwner","visible","setVisible","lastYearPayment","setlastYearPayment","lastYearInsurancePremium","setLastYearInsurancePremium","ratioResponse","setRatioResponse","agencyId","setAgencyId","agentId","setAgentId","regionId","setRegionId","otherPrams","setOtherParams","idList","setIdList","insuranceSumForPassenger","passengerCapacity","vehicleTypeId","lossRatio","osgopCalculateData","setOsgopCalculateData","osgopCalculateResponse","setOsgopCalculateResponse","policies","setPolicies","navigate","useNavigate","t","useTranslation","setBreadcrumbs","useStore","state","breadcrumbs","useMemo","id","title","path","user","useEffect","filials","useGetAllQuery","key","KEYS","url","URLS","data","filialList","getSelectOptionsListFromData","insuranceTerms","isLoadingInsuranceTerms","isLoading","insuranceTermsList","region","isLoadingRegion","regionList","genders","genderList","residentTypes","residentTypeList","vehicleTypes","vehicleTypeList","ownershipForms","ownershipFormList","agents","params","branch","enabled","agentsList","country","isLoadingCountry","countryList","okeds","okedList","areaTypes","areaTypesList","district","districtList","usePostQuery","listKeyId","getPersonalInfoRequest","mutate","isLoadingPersonalInfo","getOrganizationInfoRequest","isLoadingOrganizationInfo","getVehicleInfoRequest","isLoadingVehicleInfo","getRatioRequest","hideSuccessToast","calcRequest","createRequest","isLoadingPost","getInfo","type","attributes","format","onSuccess","getOrgInfo","getFieldData","name","value","isEqual","prev","parseInt","every","values","_item","insuranceTermId","xs","formRequest","agentReward","rpmSum","insurantType","ownerType","rest","Number","person","organization","filter","_policy","index","includes","response","getValueFromField","footer","className","gutterWidth","style","borderRight","align","green","disabled","defaultValue","label","required","options","property","hideLabel","sumBy","onChange","val","dateFormat","find","_insuranceTerm","onClick","gray","justify","width","mask","placeholder","maskChar","upperCase","e","target","pattern","message","noMaxWidth","valueAsString","checked","bordered","hideThead","thead","map","item","_vehicle","displayType","thousandSeparator","d","i","color","undefined","valueAsNumber","round","hide","isEmpty","toast","max","Styled","styled","_extends","Object","assign","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","forwardRef","_ref","ref","_ref$color","_ref$size","size","React","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","propTypes","PropTypes","displayName"],"sourceRoot":""}