{"version":3,"file":"static/js/251.3990af91.chunk.js","mappings":"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","sources":["components/panel/index.jsx","components/search/index.jsx","components/section/index.jsx","components/ui/title/index.jsx","modules/agreement/containers/osgor/ViewContainer.jsx","modules/agreement/pages/osgor/ViewPage.jsx","utils/index.js"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.div`\r\n  padding: 12px 15px;\r\n  background-color: #F7F7F7;\r\n  width: 100%;\r\n  display: block;\r\n`;\r\n\r\nconst Panel = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Panel;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Styled = styled.form`\r\n  display: flex;\r\n\r\n  .search-form-input {\r\n    padding: 15px 25px;\r\n    border: 1px solid #CDCDCD;\r\n    border-radius: 5px 0px 0px 5px;\r\n    display: block;\r\n    width: 100%;\r\n    outline: none;\r\n    transition: 0.2s ease;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Regular', sans-serif;\r\n\r\n    &:focus {\r\n      border-color: #13D6D1;\r\n    }\r\n  }\r\n\r\n  .search-form-btn {\r\n    padding: 15px 20px;\r\n    min-width: 175px;\r\n    text-align: center;\r\n    border: none;\r\n    background: #13D6D1;\r\n    border-radius: 0px 5px 5px 0px;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    font-family: 'Gilroy-Medium', sans-serif;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Search = ({\r\n                    ...rest\r\n                }) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const {t} = useTranslation()\r\n    const onSubmit = (data) => {\r\n        console.log('search', data)\r\n    }\r\n    return (\r\n        <Styled onSubmit={handleSubmit(onSubmit)} {...rest}>\r\n            <input placeholder={t('Поиск')}  {...register(\"search\")} type=\"text\" className={'search-form-input'}/>\r\n            <button className={'search-form-btn'} type={'submit'}>{t(\"Найти\")}</button>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Container} from \"react-grid-system\";\r\n\r\nconst Styled = styled.section`\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  \r\n`;\r\nconst Section = ({\r\n                     children,\r\n                     ...rest\r\n                 }) => {\r\n    return (\r\n        <Styled {...rest}>\r\n            <Container fluid>\r\n                {children}\r\n            </Container>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Section;","import React, {useEffect, useState,useRef} from 'react';\r\nimport styled,{css} from \"styled-components\";\r\n\r\nconst Styled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  h2{\r\n    padding-right: 25px;\r\n    font-size: 24px;\r\n    color: #000;\r\n    font-family: 'Gilroy-Bold', sans-serif;\r\n    margin-bottom: 0;\r\n  }\r\n  .line{\r\n    height: 1px;\r\n    background-color: #E5E5E5;\r\n    margin-top: 5px;\r\n    ${({w}) => w && `width: calc(100% - ${w}px - 10px);`}\r\n  }\r\n  \r\n  ${({sm}) => sm && css`\r\n    h2 {\r\n      font-size: 18px;\r\n    }\r\n  `}\r\n`;\r\nconst Title = ({\r\n                   children,\r\n                   ...rest\r\n               }) => {\r\n    const [width,setWidth] = useState(0);\r\n    useEffect(()=>{\r\n        setWidth(ref.current.clientWidth)\r\n    },[])\r\n    const ref = useRef(null)\r\n    return (\r\n        <Styled {...rest} w={width}>\r\n            <h2 ref={ref}>{children}</h2>\r\n            <div className=\"line\"></div>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, {useEffect, useMemo, useState} from 'react';\r\nimport {find, get, head, isEqual, isNil, round} from \"lodash\";\r\nimport Panel from \"../../../../components/panel\";\r\nimport Search from \"../../../../components/search\";\r\nimport {Col, Row} from \"react-grid-system\";\r\nimport Section from \"../../../../components/section\";\r\nimport Title from \"../../../../components/ui/title\";\r\nimport Button from \"../../../../components/ui/button\";\r\nimport Form from \"../../../../containers/form/form\";\r\nimport Flex from \"../../../../components/flex\";\r\nimport Field from \"../../../../containers/form/field\";\r\nimport {useDeleteQuery, useGetAllQuery, usePostQuery} from \"../../../../hooks/api\";\r\nimport {KEYS} from \"../../../../constants/key\";\r\nimport {URLS} from \"../../../../constants/url\";\r\nimport {getSelectOptionsListFromData} from \"../../../../utils\";\r\nimport {OverlayLoader} from \"../../../../components/loader\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useStore} from \"../../../../store\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport dayjs from \"dayjs\";\r\n\r\n\r\nconst ViewContainer = ({form_id = null}) => {\r\n    const {t} = useTranslation()\r\n    const navigate = useNavigate();\r\n    const setBreadcrumbs = useStore(state => get(state, 'setBreadcrumbs', () => {\r\n    }))\r\n    const breadcrumbs = useMemo(() => [{\r\n        id: 1, title: 'OSGOR list', path: '/osgor/list',\r\n    }, {\r\n        id: 2, title: 'OSGOR view', path: '/osgor/list',\r\n    }], [])\r\n\r\n\r\n    useEffect(() => {\r\n        setBreadcrumbs(breadcrumbs)\r\n    }, [])\r\n    const {data, isLoading} = useGetAllQuery({\r\n        key: KEYS.osgorView,\r\n        url: URLS.osgorView,\r\n        params: {\r\n            params: {\r\n                osgor_formId: form_id\r\n            }\r\n        },\r\n        enabled: !!(form_id)\r\n    })\r\n\r\n    const {data: filials, isLoading: isLoadingFilials} = useGetAllQuery({key: KEYS.agencies, url: URLS.agencies})\r\n    const filialList = getSelectOptionsListFromData(get(filials, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: insuranceTerms, isLoading: isLoadingInsuranceTerms} = useGetAllQuery({\r\n        key: KEYS.insuranceTerms, url: URLS.insuranceTerms\r\n    })\r\n    const insuranceTermsList = getSelectOptionsListFromData(get(insuranceTerms, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: okeds} = useGetAllQuery({\r\n        key: KEYS.okeds, url: URLS.okeds\r\n    })\r\n    const okedList = getSelectOptionsListFromData(get(okeds, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: region, isLoading: isLoadingRegion} = useGetAllQuery({\r\n        key: KEYS.regions, url: URLS.regions\r\n    })\r\n    const regionList = getSelectOptionsListFromData(get(region, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: ownershipForms} = useGetAllQuery({\r\n        key: KEYS.ownershipForms, url: URLS.ownershipForms\r\n    })\r\n    const ownershipFormList = getSelectOptionsListFromData(get(ownershipForms, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: genders} = useGetAllQuery({\r\n        key: KEYS.genders, url: URLS.genders\r\n    })\r\n    const genderList = getSelectOptionsListFromData(get(genders, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: country, isLoading: isLoadingCountry} = useGetAllQuery({\r\n        key: KEYS.countries, url: URLS.countries\r\n    })\r\n    const countryList = getSelectOptionsListFromData(get(country, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: residentTypes} = useGetAllQuery({\r\n        key: KEYS.residentTypes, url: URLS.residentTypes\r\n    })\r\n    const residentTypeList = getSelectOptionsListFromData(get(residentTypes, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: agents} = useGetAllQuery({\r\n        key: [KEYS.agents, get(data,'data.result.agencyId')],\r\n        url: URLS.agents,\r\n        params: {\r\n            params: {\r\n                branch: get(data,'data.result.agencyId')\r\n            }\r\n        },\r\n        enabled: !!(get(data,'data.result.agencyId'))\r\n    })\r\n    const agentsList = getSelectOptionsListFromData(get(agents, `data.result`, []), 'id', 'name')\r\n\r\n    const {data: activity} = useGetAllQuery({\r\n        key: [KEYS.activityAndRisk],\r\n        url: URLS.activityAndRisk,\r\n        params: {\r\n            params: {\r\n                oked:get(data, 'data.result.insurant.organization.oked') ?? get(data, 'data.result.insurant.person.oked')\r\n            }\r\n        },\r\n        enabled: !!(get(data, 'data.result.insurant.organization.oked') || get(data, 'data.result.insurant.person.oked'))\r\n    })\r\n    const activityList = getSelectOptionsListFromData([{\r\n        oked: get(activity, `data.result.oked`),\r\n        name: get(activity, `data.result.name`)\r\n    }], 'oked', 'name')\r\n\r\n\r\n    const {\r\n        mutate: sendFond, isLoading: isLoadingFond\r\n    } = usePostQuery({listKeyId: KEYS.osgorView})\r\n    const {\r\n        mutate:confirmPayedRequest, isLoading: isLoadingConfirmPayed\r\n    } = usePostQuery({listKeyId: KEYS.osgorView})\r\n\r\n    const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: KEYS.osgorDelete})\r\n\r\n    const send = () => {\r\n        sendFond({\r\n                url: `${URLS.osgorSendFond}?osgor_formId=${form_id}`, attributes: {\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const confirmPayed = () => {\r\n        confirmPayedRequest({\r\n                url: URLS.osgorConfirmPayment, attributes: {\r\n                    uuid:get(data, 'data.result.uuid'),\r\n                    polisUuid:get(head(get(data, 'data.result.policies',[])),'uuid'),\r\n                    paidAt:dayjs(get(head(get(data, 'data.result.policies',[])),'issueDate')).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                    insurancePremium:get(head(get(data, 'data.result.policies',[])),'insurancePremium'),\r\n                    startDate:get(head(get(data, 'data.result.policies',[])),'startDate'),\r\n                    endDate:get(head(get(data, 'data.result.policies',[])),'endDate')\r\n                }\r\n            },\r\n            {\r\n                onSuccess: ({data}) => {\r\n\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const remove = () => {\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'error',\r\n            backdrop: 'rgba(0,0,0,0.9)',\r\n            background: 'none',\r\n            title: t('Are you sure?'),\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#13D6D1',\r\n            confirmButtonText: t('Delete'),\r\n            cancelButtonText: t('Cancel'),\r\n            customClass: {\r\n                title: 'title-color',\r\n            },\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteRequest({url: `${URLS.osgorDelete}?osgor_formId=${form_id}`}, {\r\n                    onSuccess: () => {\r\n                        navigate('/osgor')\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    if (isLoading || isLoadingFilials || isLoadingInsuranceTerms || isLoadingRegion || isLoadingCountry) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n\r\n    return (<>\r\n        {(isLoadingFond || deleteLoading || isLoadingConfirmPayed) && <OverlayLoader/>}\r\n        <Panel>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Search/>\r\n                </Col>\r\n            </Row>\r\n        </Panel>\r\n        <Section>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Title>Параметры полиса</Title>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Form\r\n                        footer={!isEqual(get(data, 'data.result.status'), 'payed') && <Flex className={'mt-32'}>{(isEqual(get(data, 'data.result.status'), 'new') || isEqual(get(data, 'data.result.status'), 'edited')) && <><Button onClick={remove}\r\n                            danger type={'button'}\r\n                            className={'mr-16'}>Удалить</Button>\r\n                            <Button onClick={() => navigate(`/osgor/update/${form_id}`)} yellow type={'button'}\r\n                                    className={'mr-16'}>Изменить</Button></>}\r\n                            <Button onClick={(isEqual(get(data, 'data.result.status'),'new') || isEqual(get(data, 'data.result.status'),'edited')) ? () =>send() : ()=>{}} gray={!(isEqual(get(data, 'data.result.status'),'new') || isEqual(get(data, 'data.result.status'),'edited'))} type={'button'} className={'mr-16'}>Отправить в\r\n                                Фонд</Button>\r\n                            <Button onClick={isEqual(get(data, 'data.result.status'),'sent') ? ()=>confirmPayed():()=>{}}\r\n                                type={'button'} gray={!isEqual(get(data, 'data.result.status'),'sent')} className={'mr-16'}>Подтвердить\r\n                                оплату</Button></Flex>}>\r\n                        <Row gutterWidth={60} className={'mt-32'}>\r\n                            <Col xs={4} style={{borderRight: '1px solid #DFDFDF'}}>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Статус</Col>\r\n                                    <Col xs={7}><Button green>{get(data, 'data.result.status')}</Button></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Филиал </Col>\r\n                                    <Col xs={7}><Field defaultValue={get(data, 'data.result.agencyId')} disabled\r\n                                                       params={{required: true}} options={filialList}\r\n                                                       property={{hideLabel: true}} type={'select'}\r\n                                                       name={'agencyId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Серия договора:</Col>\r\n                                    <Col xs={7}><Field defaultValue={get(data, 'data.result.seria')}\r\n                                                       property={{hideLabel: true, disabled: true}} type={'input'}\r\n                                                       name={'seria'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Номер договора: </Col>\r\n                                    <Col xs={7}><Field defaultValue={get(data, 'data.result.number')}\r\n                                                       params={{required: true}}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'input'}\r\n                                                       name={'number'}/></Col>\r\n                                </Row>\r\n                                {\r\n                                    isEqual(get(data, 'data.result.status'), 'payed') && <>\r\n                                        <Row align={'center'} className={'mb-25'}>\r\n                                            <Col xs={5}>Серия полиса: </Col>\r\n                                            <Col xs={7}><Field defaultValue={get(data, 'data.result.policies[0].seria')}\r\n                                                               params={{required: true}}\r\n                                                               property={{hideLabel: true, disabled: true}}\r\n                                                               type={'input'}\r\n                                                               name={'data.result.policies[0].seria'}/></Col>\r\n                                        </Row>\r\n                                        <Row align={'center'} className={'mb-25'}>\r\n                                            <Col xs={5}>Номер полиса: </Col>\r\n                                            <Col xs={7}><Field defaultValue={get(data, 'data.result.policies[0].number')}\r\n                                                               params={{required: true}}\r\n                                                               property={{hideLabel: true, disabled: true}}\r\n                                                               type={'input'}\r\n                                                               name={'data.result.policies[0].number'}/></Col>\r\n                                        </Row>\r\n                                    </>\r\n                                }\r\n                                {\r\n                                    (isEqual(get(data, 'data.result.status'), 'sent') || isEqual(get(data, 'data.result.status'), 'payed')) && <>\r\n                                        <Row align={'center'} className={'mb-25'}>\r\n                                            <Col xs={5}>Дата отправки в Фонд: </Col>\r\n                                            <Col xs={7}><Field\r\n                                                defaultValue={get(data, 'data.result.sentDate')} disabled\r\n                                                property={{\r\n                                                    hideLabel: true,\r\n                                                    dateFormat: 'yyyy-MM-dd'\r\n                                                }}\r\n                                                type={'datepicker'}\r\n                                                name={'policies[0].sentDate'}/></Col>\r\n                                        </Row>\r\n\r\n                                    </>\r\n                                }\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая сумма: </Col>\r\n                                    <Col xs={7}><Field defaultValue={get(data, 'data.result.policies[0].insuranceSum')}\r\n                                                       property={{hideLabel: true, disabled: true}}\r\n                                                       type={'number-format-input'}\r\n                                                       name={'policies[0].insuranceSum'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Страховая премия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        defaultValue={get(data, 'data.result.policies[0].insurancePremium')}\r\n                                        property={{hideLabel: true, disabled: true}}\r\n                                        type={'number-format-input'}\r\n                                        name={'policies[0].insurancePremium'}/></Col>\r\n                                </Row>\r\n                                {\r\n                                    isEqual(get(data, 'data.result.status'), 'payed') &&  <Row align={'center'} className={'mb-25'}>\r\n                                        <Col xs={5}>Оплачено: </Col>\r\n                                        <Col xs={7}><Field\r\n                                            defaultValue={get(data, 'data.result.policies[0].insurancePremium')}\r\n                                            property={{hideLabel: true, disabled: true}}\r\n                                            type={'number-format-input'}\r\n                                            name={'policies[0].insurancePremium'}/></Col>\r\n                                    </Row>\r\n                                }\r\n\r\n\r\n                            </Col>\r\n                            <Col xs={4}>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Срок страхования:</Col>\r\n                                    <Col xs={7}><Field disabled\r\n                                                       defaultValue={get(data, 'data.result.policies[0].insuranceTermId')}\r\n                                                       options={insuranceTermsList} params={{required: true}}\r\n                                                       label={'Insurance term'} property={{hideLabel: true}}\r\n                                                       type={'select'}\r\n                                                       name={'policies[0].insuranceTermId'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дата начала покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        defaultValue={get(data, 'data.result.policies[0].startDate')} disabled\r\n                                        property={{\r\n                                            hideLabel: true,\r\n                                            dateFormat: 'dd.MM.yyyy'\r\n                                        }}\r\n                                        type={'datepicker'}\r\n                                        name={'policies[0].startDate'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дача окончания покрытия: </Col>\r\n                                    <Col xs={7}><Field\r\n                                        defaultValue={get(data, 'data.result.policies[0].endDate')} disabled\r\n                                        property={{hideLabel: true, dateFormat: 'dd.MM.yyyy'}} type={'datepicker'}\r\n                                        name={'policies[0].endDate'}/></Col>\r\n                                </Row>\r\n                                <Row align={'center'} className={'mb-25'}>\r\n                                    <Col xs={5}>Дата выдачи полиса: </Col>\r\n                                    <Col xs={7}><Field defaultValue={get(data, 'data.result.policies[0].issueDate')}\r\n                                                       disabled property={{hideLabel: true, dateFormat: 'dd.MM.yyyy'}}\r\n                                                       type={'datepicker'}\r\n                                                       name={'policies[0].issueDate'}/></Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutterWidth={60} className={'mt-15'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Страхователь</Title></Col>\r\n                            <Col xs={12}>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <Flex>\r\n                                            <h4 className={'mr-16'}>Страхователь</h4>\r\n                                            <Button\r\n                                                gray={!get(data, 'data.result.insurant.person')} className={'mr-16'}\r\n                                                type={'button'}>Физ. лицо</Button>\r\n                                            <Button\r\n                                                gray={!get(data, 'data.result.insurant.organization')} type={'button'}>Юр.\r\n                                                лицо</Button>\r\n                                        </Flex>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12}>\r\n                                <hr className={'mt-15 mb-15'}/>\r\n                            </Col>\r\n                            {get(data, 'data.result.insurant.person') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.person.fullName.firstname')}\r\n                                           label={'Firstname'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.firstname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.person.fullName.lastname')}\r\n                                           label={'Lastname'} type={'input'}\r\n                                           name={'insurant.person.fullName.lastname'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.person.fullName.middlename')}\r\n                                           label={'Middlename'}\r\n                                           type={'input'}\r\n                                           name={'insurant.person.fullName.middlename'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.person.passportData.pinfl')}\r\n                                           label={'ПИНФЛ'} type={'input'}\r\n                                           name={'insurant.person.passportData.pinfl'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field disabled property={{\r\n                                        mask: 'aa',\r\n                                        placeholder: 'AA',\r\n                                        maskChar: '_'\r\n                                    }} defaultValue={get(data, 'data.result.insurant.person.passportData.seria')}\r\n                                           label={'Passport seria'} type={'input-mask'}\r\n                                           name={'insurant.person.passportData.seria'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field disabled property={{\r\n                                        mask: '9999999',\r\n                                        placeholder: '1234567',\r\n                                        maskChar: '_',\r\n                                    }} defaultValue={get(data, 'data.result.insurant.person.passportData.number')}\r\n                                           label={'Passport number'} type={'input-mask'}\r\n                                           name={'insurant.person.passportData.number'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        defaultValue={get(data, 'data.result.insurant.person.birthDate')}\r\n                                        label={'Birth date'}\r\n                                        type={'datepicker'}\r\n                                        name={'insurant.person.birthDate'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        defaultValue={get(data, 'data.result.insurant.person.gender')}\r\n                                        options={genderList}\r\n                                        label={'Gender'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.gender'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        options={countryList}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.countryId')}\r\n                                        label={'Country'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.countryId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        options={regionList}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.regionId')}\r\n                                        label={'Region'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.regionId'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        options={residentTypeList}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.residentType')}\r\n                                        label={'Resident type'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.residentType'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        property={{disabled: true}}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.address')}\r\n                                        label={'Address'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.address'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        property={{disabled: true}}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.phone')}\r\n                                        label={'Phone'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        property={{disabled: true}}\r\n                                        defaultValue={get(data, 'data.result.insurant.person.email')}\r\n                                        label={'Email'}\r\n                                        type={'input'}\r\n                                        name={'insurant.person.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        defaultValue={parseInt(get(data, 'data.result.insurant.person.oked'))}\r\n                                        options={okedList}\r\n                                        label={'Oked'}\r\n                                        type={'select'}\r\n                                        name={'insurant.person.oked'}/>\r\n                                </Col>\r\n\r\n                            </>}\r\n                            {get(data, 'data.result.insurant.organization') && <>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field disabled props={{required: true}} label={'INN'}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.inn')} property={{\r\n                                        mask: '999999999',\r\n                                        placeholder: 'Inn',\r\n                                        maskChar: '_'\r\n                                    }} name={'insurant.organization.inn'} type={'input-mask'}/>\r\n\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}} props={{required: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.name')}\r\n                                           label={'Наименование'} type={'input'}\r\n                                           name={'insurant.organization.name'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.representativeName')}\r\n                                           label={'Руководитель'} type={'input'}\r\n                                           name={'insurant.organization.representativeName'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.position')}\r\n                                           label={'Должность'} type={'input'}\r\n                                           name={'insurant.organization.position'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.phone')}\r\n                                           props={{required: true}}\r\n                                           label={'Телефон'} type={'input'}\r\n                                           name={'insurant.organization.phone'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.email')}\r\n                                           label={'Email'} type={'input'}\r\n                                           name={'insurant.organization.email'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field\r\n                                        disabled\r\n                                        options={okedList}\r\n                                        defaultValue={parseInt(get(data, 'data.result.insurant.organization.oked'))}\r\n                                        label={'ОКЭД'}\r\n                                        type={'select'}\r\n                                        name={'insurant.organization.oked'}/>\r\n                                </Col>\r\n                                <Col xs={3} className={'mb-25'}>\r\n                                    <Field property={{disabled: true}}\r\n                                           defaultValue={get(data, 'data.result.insurant.organization.checkingAccount')}\r\n                                           label={'Расчетный счет'} type={'input'}\r\n                                           name={'insurant.organization.checkingAccount'}/>\r\n                                </Col>\r\n                                <Col xs={3}><Field disabled\r\n                                                   defaultValue={get(data, 'data.result.insurant.organization.regionId')}\r\n                                                   label={'Область'} params={{required: true}} options={regionList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.regionId'}/></Col>\r\n                                <Col xs={3}><Field disabled\r\n                                                   defaultValue={get(data, 'data.result.insurant.organization.ownershipFormId')}\r\n                                                   label={'Форма собственности'} params={{required: true}}\r\n                                                   options={ownershipFormList}\r\n                                                   type={'select'}\r\n                                                   name={'insurant.organization.ownershipFormId'}/></Col>\r\n                            </>}\r\n                        </Row>\r\n                        <Row gutterWidth={60} className={'mt-15'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Вид деятельности</Title></Col>\r\n                            <Col xs={3} className={'mb-25'}>\r\n                                <Field\r\n                                    disabled\r\n                                    defaultValue={get(head(activityList),'value')}\r\n                                    options={activityList}\r\n                                    label={'Вид деятельности (по правилам)'}\r\n                                    type={'select'}\r\n                                    name={'activityRisk'}/>\r\n                            </Col>\r\n                            <Col xs={3} className={'mb-25'}>\r\n                                <Field\r\n                                    disabled\r\n                                    defaultValue={get(data, 'data.result.policies[0].risk')}\r\n                                    options={getSelectOptionsListFromData(get(activity, 'data.result.risks', []), 'number', 'number')}\r\n                                    label={'Класс проф. риска'}\r\n                                    type={'select'}\r\n                                    name={'risk'}/>\r\n                            </Col>\r\n                            <Col xs={3} className={'mb-25'}>\r\n                                <Field\r\n                                    defaultValue={get(data, 'data.result.policies[0].insuranceRate', 0)}\r\n                                    property={{disabled: true}}\r\n                                    label={'Коэффициент страхового тарифа'}\r\n                                    type={'input'}\r\n                                    name={'comission'}/>\r\n                            </Col>\r\n                            <Col xs={3} className={'mb-25'}>\r\n                                <Field\r\n                                    property={{disabled: true}}\r\n                                    defaultValue={get(data, 'data.result.policies[0].funeralExpensesSum', 0)}\r\n                                    label={'Расходы на погребение'}\r\n                                    type={'number-format-input'}\r\n                                    name={'funeralExpensesSum'}/>\r\n                            </Col>\r\n                            <Col xs={3} className={'mb-25'}>\r\n                                <Field\r\n                                    property={{disabled: true}}\r\n                                    defaultValue={get(data, 'data.result.policies[0].fot', 0)}\r\n                                    label={'Фонд оплаты труда'}\r\n                                    type={'number-format-input'}\r\n                                    name={'fot'}/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutterWidth={60} className={'mt-15'}>\r\n                            <Col xs={12} className={'mb-15'}><Title>Агентсткое вознограждение и РПМ</Title></Col>\r\n                            <Col xs={8}>\r\n                                <Row>\r\n                                    <Col xs={12} className={'mb-25'}>\r\n                                        <Field\r\n                                            disabled\r\n                                            defaultValue={get(data,'data.result.agentId')}\r\n                                            options={[{value:'undefined',label:t('No agent')},...agentsList]}\r\n                                            label={'Агент'}\r\n                                            type={'select'}\r\n                                            name={'agentId'}/>\r\n                                    </Col>\r\n\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={get(data,'data.result.policies[0].agentReward',25)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Вознограждение %'}\r\n                                            type={'input'}\r\n                                            name={'policies[0].agentReward'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={5}\r\n                                            property={{disabled: true}}\r\n                                            label={'Отчисления в РПМ  %'}\r\n                                            type={'input'}\r\n                                            name={'policies[0].rpm'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={round(get(data,'data.result.agentId')==\"undefined\" ? 0  : 25 * get(data,'data.result.policies[0].insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'rewardSum'}/>\r\n                                    </Col>\r\n                                    <Col xs={6} className={'mb-25'}>\r\n                                        <Field\r\n                                            defaultValue={round(5 *  get(data,'data.result.policies[0].insurancePremium') / 100, 2)}\r\n                                            property={{disabled: true}}\r\n                                            label={'Сумма'}\r\n                                            type={'number-format-input'}\r\n                                            name={'rpmSum'}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Section>\r\n    </>);\r\n};\r\n\r\nexport default ViewContainer;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport ViewContainer from \"../../containers/osgor/ViewContainer\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst Styled = styled.div`\r\n  .w-100 {\r\n    & > div {\r\n      width: 100%;\r\n    }\r\n  }\r\n  .form-group {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nconst ViewPage = ({...rest}) => {\r\n    const {form_id = null} = useParams();\r\n    return (\r\n        <Styled {...rest}>\r\n            <ViewContainer form_id={form_id}/>\r\n        </Styled>\r\n    );\r\n};\r\n\r\nexport default ViewPage;","import {includes, isEqual,get,isObject} from \"lodash\";\r\n\r\nconst addDetectClick =  ({setOpen,classNames = []}) => {\r\n    window.addEventListener(\"click\", (e) => {\r\n        if (!classNames.some(className => e.target.classList.contains(className))) {\r\n            setOpen(false);\r\n        }\r\n    });\r\n}\r\nconst removeDetectClick = () => {\r\n    window.removeEventListener('click',addDetectClick,false);\r\n}\r\n\r\nconst hasAccess = (roles = [], can = '') => {\r\n    let access = false;\r\n    if (includes(roles, can)) {\r\n        access = true;\r\n    }\r\n    return access;\r\n}\r\n\r\nconst formatDate  = (date) => {\r\n\r\n    date = new Date(date);\r\n    let day = date.getDate();\r\n    let monthIndex = date.getMonth()+1;\r\n    let year = date.getFullYear();\r\n\r\n    return monthIndex < 10 ? `${day}/0${monthIndex}/${year}` : `${day}/${monthIndex}/${year}`;\r\n}\r\n\r\n\r\n\r\n\r\nconst getSelectOptionsListFromData = (data = [], value = 'id', label = 'title') => {\r\n    return data.map(item => isObject(item) ?  ({ value: item[value], label: get(item,label) }) : ({ value: item, label: item})) || [];\r\n}\r\n\r\nconst getFieldType = (type = 'String') => {\r\n    if(isEqual(type,'Date')){\r\n        return 'datepicker';\r\n    }\r\n\r\n    if(isEqual(type,'Schema.Types.ObjectId')){\r\n        return 'select';\r\n    }\r\n\r\n\r\n    return 'input';\r\n}\r\n\r\nexport {\r\n    addDetectClick,\r\n    removeDetectClick,\r\n    hasAccess,\r\n    getSelectOptionsListFromData,\r\n    formatDate,\r\n    getFieldType\r\n}"],"names":["Styled","styled","children","rest","fluid","useForm","register","handleSubmit","t","useTranslation","onSubmit","data","console","log","placeholder","type","className","w","sm","css","useState","width","setWidth","useEffect","ref","current","clientWidth","useRef","form_id","navigate","useNavigate","setBreadcrumbs","useStore","state","get","breadcrumbs","useMemo","id","title","path","useGetAllQuery","key","KEYS","url","URLS","params","osgor_formId","enabled","isLoading","filials","isLoadingFilials","filialList","getSelectOptionsListFromData","insuranceTerms","isLoadingInsuranceTerms","insuranceTermsList","okeds","okedList","region","isLoadingRegion","regionList","ownershipForms","ownershipFormList","genders","genderList","country","isLoadingCountry","countryList","residentTypes","residentTypeList","agents","branch","agentsList","activity","oked","activityList","name","usePostQuery","listKeyId","sendFond","mutate","isLoadingFond","confirmPayedRequest","isLoadingConfirmPayed","useDeleteQuery","deleteRequest","deleteLoading","xs","footer","isEqual","onClick","Swal","position","icon","backdrop","background","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","then","result","isConfirmed","onSuccess","danger","yellow","attributes","gray","uuid","polisUuid","head","paidAt","dayjs","format","insurancePremium","startDate","endDate","gutterWidth","style","borderRight","align","green","defaultValue","disabled","required","options","property","hideLabel","dateFormat","label","mask","maskChar","parseInt","props","value","round","useParams","map","item","isObject"],"sourceRoot":""}